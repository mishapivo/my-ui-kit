%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Serg S) ()
%%Title: (007.ai)
%%CreationDate: 9/29/2005 4:23 PM
%%BoundingBox: 178 555 340 717
%%HiResBoundingBox: 178.3164 555.4399 339.6514 716.7744
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 2 3 () 
%AI3_TemplateBox: 298.5 420.3887 298.5 420.3887
%AI3_TileBox: 17.4175 22.0237 577.8175 819.7837
%AI3_DocumentPreview: None
%AI5_ArtSize: 595.2756 841.8898
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 86.9697 751.8262 2.9356 1148 792 18 1 1 2 40 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:14 26
%AI7_GridSettings: 28.3465 2 28.3465 2 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 128 128 8
%%BeginData: 22965 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD33FFA8FD04FFA87DA8FD0AFF7DA8A8FFFFFFA8FD65FFA87DA87D
%A8A87D52FFA87DA8FFFFFFA8FFA8FF7DFFFF7D52A8A8A87DA8A8FD61FFA8
%7DFD05FF7DFFA8A87D7DFD04A87DA87D7DA8A8FF7DA8FD04FFA8A8FFFFFF
%A8FD57FFA87D7DA8FF7DFD05FF7DFD05FF7DFD06FF7DFD04FFA87DA8FFFF
%FFA8A8FFFF7DA87DFD56FFA8FFA87DA8A8FD04FF7DFD06FFA87DFD04FFA8
%A8FD05FFA8A8FD04FFA8FF7DFFFFA8FD52FFA87DFFFFA8FFFFA87DA8FFFF
%FF7DA8FD07FF7DA8FFFFFF7DFD07FFA87DFFFFFFA852FFFFFFA8FFFFA8A8
%FD4AFF7DFFFFFFA8A8A8FFA8FFA8A87D7DFFA87DFD06FFFD05A8FFFFFD05
%A8FD05FFA8A8A8FF7DA8A8FFFFA8FFA87DA8FFFFA8A8A8FD44FF7DA87DFF
%FFFD08A87D527DA8FD07FF7DA87DA852A87D7D7DA8A87DFD08FF7D7D7DFF
%7DA8A8A87DFF7DFFA87DA8A8FD41FFFD04A8FFFF7DFFA8FFFFA87DA8A8FF
%7D7D7DA8A8FD05FFA8A8527DA8A87DA8A8A8527D7DFFA8FD05FF7D7D7DA8
%FFFD04A8FFFFA8FF7DFFFFA8FFA8A8FD3DFF7DA8A87D7DFFFFFF7DFD04A8
%7D7DFF7D7DFFFF527DA87D7DA8FD047D27A8A87D7DA87D5252A8527D7DA8
%7DA87D7DA8FF52A8FF7D52A8A8FF7DA8FFFFFF7D7DFFA87DA8FD3AFF7DFD
%04FF7DA8A8A8FF7DA8527D527DFF7D7DA8A87DA8A87DFD04FFA87DFF7D7D
%A8A87DFD04A8FFFFFFFD04A87DA8A87D7DFF7D52FD047DA8FFA8A852FD04
%FFA8A8FD38FF7DFD05FF7D7DA8A87D7D27A8FFFD067DA8A87D7DFD05FF7D
%A8A8A87DFFFFA87DA87DA8FD05FFA852A8A8A87DA8527D7DFF7D5252A8A8
%A852A8A8FD04FF7DA8FD36FF7DFD06FFA87DA8FFFFA87D7DFFA8A87DA87D
%A8FFA8A8FD09FFA8FFFFFFA8A8FD09FFA87DFFA87D7DA87DFFFFA852FFFF
%FFA8A87DFD06FFA8FD33FFA8FF7DA8FD04FFA8A8FD057DA8A87DA8FF527D
%FFA8527D52FD04A8FD06FFA8FD04FF7DFD07FF7DA8A87D527DA8FF7D7DFF
%FF7DA8A8A8FD057DFD05FFA87DA8FFA8FD2EFF7DFF7DFD09A87DFFA87D7D
%A87D7DFFA852A8A8FF7D7DA8FFA8A87DFD05FFA8FFA8FFFFA8A8FD04FFA8
%7DFFA8FF527DFFFF7D527DFF7D7D7DA87DA8FFA87DFF7DFD05A87D7DA8A8
%FD2DFFFD04A8FFFFA8FFA8FFFFFF52A87DA8527DA87D52FD047DA87DA852
%FD04FFA87DFFFFA8527DA8A87DA87D7DA8FFFF7DA8FFFFFFA87D7DA87D7D
%527D7D5252A87D7D7DA8A87DFFFFA8FFA8FFFFFFFD04A8FD2DFF7DA8FD08
%FFA87D7DA8A8FF52FF7D527DFFA87DA8FFFFA87DFD05FF7DA8A8A8FD06FF
%7DFF7D7DA8FD04FFA87DFFA8FF7DFFA8A852A8FF7DA8A8A87D7DA8FD08FF
%A8A8A8FD2CFFA852FD08FFA87DA8527DFF7D7DFFA87D7DFFA8A87DFFFFA8
%A87DFFFFFF7DA87DA8A8FD06FFA8A8A87DA8A8FFFFFD04A8FF7DFFA8FF7D
%A87DFF7DA8FF7D52FF7DFD09FF52A8FD2BFFA8A87DFD08FF7D7DFFA8A87D
%7D7DFFA8FFA8A8A8FFA8A8FFA8FFA87DA87DFFFFFFA8FD08FFA8FFFFA8A8
%7DA8A8FF7DFFA8A8A8FFFD06A87D7D7DA8A8A87DFD08FFA87DFD2AFFA87D
%FFA8A8FFA87DFFFFA87DA8FD04FFFD047DFFA8FFA87D7DFF7D7DA8FFFFFF
%A8FD13FFA8FFFFA87DA8FFA87DFD04A87D527D7DFD04FFA87DA8FFFF52A8
%FFA8A8FF7DFD28FFA87DFFFFA8A8FFA8A8FF7D7DFD05FFA8A8FF7DA8FFFF
%A8FFA8FFFFFFA8FD1CFFA8FFFFA8A8FFA8A8FF7D7DA8FF7DFD05FF527DA8
%A87DFFA8FFFFFF7DFD26FFA87DA8FFFFFF7D7DA87D7D7DFD05FFA8A8FFFF
%FF52A8A8A8FD28FFA8FF7D7DFD04FF7DFD05FF7D7D7DA87DA8FD04FF7DFD
%22FFA8FFA87DFD05FFA87D7D527DA8A8FD04FF7DFD04FFA87DA87DFD28FF
%A87DA8A8FD04FFA8FD04FFA8A8527D7DA8A8FD05FF7DFD04A8FD1CFF7DFF
%7D7D7DA8A8FFFFFF7D7DA87D7DFF7DFFFFFFA8A8FD04FF7DFFA8FD29FFA8
%FFA8A8FD04FF7DFFFFFFA87DA8A852FF7D7DA8FFFFFF7DA8527DA87DA8FD
%1BFFA8A8A8FFFFFD04A87DA87DA87DA8A8FD05FFA8FFFFFF7DA8FD2EFFA8
%A8A8FD08FFFD04A87DFD04A87DFFFFFFA8FFA8A8FD1BFF52A8FD04FFA8A8
%7D7D7DA87DA87DFD05FFA87D7DA87DFD31FFA8A87DA87DFD05FFA8FD067D
%A87DFD05FFA87DA8FD1AFF7DA8FD04FFFD06A87DFFFFFF7DA8FFFF7DA87D
%FD38FFA87DA8FFFF7DA8A8FFA87D7DFF7DFF7DFD05FF7D7DFD19FF7DA87D
%FD04FF7D7D7D527D7DA8FD04FFA87D52A8A8A8FD38FFA8A8A87D52A8FD04
%FF7D7D527D7DA852FD04FFA8A87DA8FD16FF7DFFFFA8FD06FF7D7DA8A87D
%FD04FFA8A8FFA8A8FD3AFF7DA8FFFF7DFFFFFFFD04A8527DA8FD05FFA8FF
%FF7DA8FD13FFA87DFFFFFF7DFD05FF7D7D7DFF7DA87DFFA87DA8FD43FF7D
%FFFFFD05A87D7DFD04FFA8A8FFFFFF7DA8FD12FF7DFD04FFA8A8FFFFFFA8
%7DFFA87DFFFFFD04A8FD45FF7DFFA8FFFF7DA8FF52A8FD04FFA8FD04FFA8
%FD11FF7DA8FD04FF7DFD04FF7DA8FFA8FFFFFFA87DA8FD46FFA852FFFFFF
%A8FFFFFF7DFFFFFFA8A8FD04FFA8A8FD10FFA8FD05FFA8FFFFFF7DA8FD07
%FF52FD48FF7DFD08FF7DFFFFFFA8FD05FFA8FD10FFA87DFFFFA8A8A8FFA8
%7D7DFD07FF7DA87DFD46FFA87DA8FD07FF7D7DA8FFFF7DFFA8FF7DA8FD0F
%FFA8A87D7DA8A87DA87D7DA8FD05FFA8FFFD04A8FD0AFFA8FD0FFFA8FD05
%FFA8FD0FFFA8FD13FFA8FFA8FF7DFFFFFFA8FFFFFFA8FF7D7D7DA8A8A852
%FD04A8FD0CFF7DA8FFFFA8FD047DFF52527DFFA8A87DA8A87D7DA8A8FD05
%FF7DA8A8A87DA87DFFFFFF7DA8FD04FFA87DA8FF7DA87DA8A8FFA87D7DFD
%07FF7DA8FFFFA8A87DA87DFF7DA8FD04FFA87DA8FFFFA87DA87DFFA87DA8
%FFA87D52A87DA87DFFFFA8527DA87D7DA852A8FFFFA87DFD0DFF7DFFFFA8
%A8A87DFFA8A87DA8FFA8A8FFFFFFA8FD07FF7DFF7D7DA8FFFFFF7DFFA8FF
%7DFFA8A8FFA8A8A87DFFFFFFA8A87D7DFFA8FD06FF7DFF7D7DA8FD04FFA8
%7DFFA8FFA8A8FFA8A8A8FFA8A8FFFFFF7D7DA8A8FFFFFFA8FD04FF7DFF7D
%A8A8A8FFFD04A8FFFFA8A8FD0EFF7DFFA8FFFF7D7DA8A8FF7DA8A8FFFFFF
%A8A8FD04FFA8A87D7D7DFF7DA8FFFFFFA87DA8FFA8A8A87DFF7DFFA87DFD
%05FF7DA8A87D7DA8A87DA87D7D7DFF7DA8FD04FFA87DFFA8A8A87DFF7DFF
%A8A87DFFFFFFFD04A87D7DA8A87DFD05FF7D7DFFA87DA87DFFA8A8FF7DA8
%FD10FF7DFF7DFF7D7D7DFF7D7D7DFD05FFA8FD06FFA8A8FFFFFF7DFD04FF
%7DA8FFA8A8A8FFA8A8FFFF7DFD04FF7DA8FFFFFF7DFD04FFA8A8FFFFFF7D
%FD04FFA87DFFA8A8A8FFA8A8FFFF7DA8FFFFFFA8A8FFFFFF7DFFFFA8A8FF
%FFFFA8A87DA8A87D7DA8FFA8A8A8FD0EFFA87DA87DA87D7DA8A87D7D52A8
%7D7D7DFFFFFF7DFD07FF7DFD05FF7DA8FFFF52A87DFF7DA8FF7DA8A8527D
%A8FFA87DA8FD04FFA8A8FFFFFF7DFD05FF7DA8FFFF7D7D7DFF7DA8FFA8A8
%A87D7DA8FFA8A8A8FD04FFA8A8FFA8A8FFFFFF7D52A8FD047DA8A8527D7D
%A87DA8A8FD0AFFA87DFFFFFFA8277DA8A8A8FFFFFF7DA87DA8A8A8FD06FF
%A8A8FD06FFA8A8A87D7DFF7D7DA8A87DA8A8A87DFD04A8FD05FFA8A8FFFF
%A8A8FD06FF7DA8A87D7DFF7D7DA8A87DA8A8FF52FD04A8FD05FFA8A8FFFF
%A8A8A87D7DA8A8FFFFFF7DA852527DFFFFFF7DA8FD0BFFA8A8FFA852A8FD
%057DA8A8FFFFA87DFD08FFA87DA87DFD06FFA8527DFFA8527D52527DFF7D
%7D52FD06FFA87DA87DFFFFA87DA87DFD06FFA8527DFFA8527D52527DFF7D
%527DFD06FFA87DA87DFFFFFFA8A87DFFA8A87DA8527D7D7DA87DA8FF7DA8
%FD0DFFA8A8A87DFFFFA8A852527DFFA8FFFFA8FD07FFA87DA8A8A8FD05FF
%A87DFFA87DFF527DFF27A8A87DFFA87DFD05FF7DA8A87D7DA87D7DA8A8FD
%05FFA87DFFA87DFF527DFF27FFA87DFFA87DFD05FF7DFFA87D7DFFFFFF7D
%FFFFA8A8A852527DFFFFFF7DA87DFD0AFFA8A87DA87DA87D7D527DA8FFFF
%FD047DFF7DA87DFD07FF7D7D7D527DA8A8FFA8A87D7DA8A8527D52A8FFFD
%047DA87D7D7DA8A8FFA8A852FD087DA8A8FFA8A87D7DA8A8527D52A8A8FD
%047DA87D7D7DA8A8FFA8A8527D7D7DA8FFA8A87DA8A8A87D7D7DFFFFA87D
%5252A8A8A87DA87DFD06FF7DFFFFFFA8A87D7D7DA852A87DFFFFA8A8FD0A
%FFA8A87D52A87DA8A8A87DA87DA87DA852A8A8FF7DA87D7D7DA87DFF7DA8
%7DA87D7D52FF7D7DA87D52A87DA87DA8A8A87DA87DA87DA8A8FFFD077DFF
%7DA87DA87D7D52FF7DFD06FFA87DFFA8FD067DA8A8FD04FFA8A8FD05FFA8
%A8FFA8A8A8FFFF7D7D7D277DA8A8A87DA8FD09FF7D7D7DA852A8FFFFA87D
%277DFFFF27A852A8FF527D527DFF525252A8FFFFFF7D52A852FD047DA852
%A8FFFFA87D5252A8FF27A852A8FF527D527DFFA8527DA8A8FFA8527DA852
%7DFD05FFA87DA8A8A852527DA87DFFFFA87DFFFFFF7DFD07FF7DFFA8FFFF
%7D7D7DA8FFA87D7DA8FFA8FD0BFF7DA87D7D527DA8FFFFFF52A852A87D52
%527D527DA87D5252A8FFA8A8FD047DA8A8FFFF7DA8FD047DA8A8A8FF7D52
%52A87D52527D527DA8527D527DFFFFA8FD057DA8FD06FFA8A8A8FF7DA87D
%FF7DA87DA8FFFFA8FF7DFD08FFA8FD077D52FD04A87DA8FD0BFFA8A8527D
%7DA87DFFFFA8A87D277DFF525252277D52A87D277DA8A8FFFF7D7DA8527D
%7DFFA8A8527D7DA852A8FFA87DA82752FF525252277D52A8A82752A8A8FF
%FF7D7DA8527D7DFD08FFA87DA87DFFA87D7D7D527D7D7D52A8FD07FF7DA8
%A87D7DA8FFA87DA87DFF7DFFFFA8A8FD0BFFA87DA8FFFFFF7DA8A8FFA852
%7DFF7D7DA8A8FD047D52A8FFFFA8A8A8FFFFFF52A8A8FFA87DA8FFFFFF7D
%A87DFFA87D52A87D7DA8A87D7DA8A852A8FFFD04A8FFFFFF52A8A8FD06FF
%A8A8FFA8A8FF7D7DA8A8FF7D7D7DFD04A8FFFFFFA87DFFFFFFA87D52FFA8
%A8FF7D7DA8FFFFFF7DA8FD0BFF7DFD04FFA852FFFFFF52A87DA87DA8A87D
%A8A85252A8FFFFA852FD04FF7DA8FFFFFF52FD04FFA852FFFFFF52527DA8
%52A8A87D7DA87D52A8FFFFA852FD04FF7DA8FD06FFA87DFFA8FF7D7D7DFF
%A8A8A87D7DFFFFFFA8A8A8FFFF7DFD04FFA8A8A8527DA8A8FD047DA8A8A8
%FD0BFFA8527DFFFFFF7DFF7DA8A8277DFF52FD077D27FD04A8FFA8FFA8A8
%527DA8A8A8527DFFFFFF7DFF7DA8A87D7DFF527DA8FD047DA8277DA8A8A8
%FFA8FFFFA852A8A8FD07FF7DA87D7D527D7DA8527D7DFFA8FD04FFA8FFA8
%A8FD04FF7DFFA8FD047DA8A8FF7DA8FD0DFFA87D7D52A852FFFFFFA85252
%7DFF525252275252FF7D277DFFFFFFA87D7D7D527D7DFFFFA87D7D7DA852
%A8FFFFA8A82752FF525252275252FF7D5227A8FFFFFF7D7D7D527D7DFD09
%FFFD06A852A87DFFFF7DA8FFFFFF7DFFFFA8FFFFFF7DFFFFFFA8A8A8FFA8
%FFFFFF7DA8FD0CFF7DA8A87D7DA87DA8FFA852FF7D7DA8527DA852A87D7D
%7D527DFFA8A8FFA87DA8A87DA8FF7DA8A87D7DFFFD04A8527D7D7DA8527D
%A827A87D7DFF7D52FFFD04A87DA87DA8A8FD07FFA8A8FFFFFFA8FFA8A8A8
%FFFFA8A8FFFFFFA8FFA8A8FFFF7DA8FFFFFF7D7DFFFFA8A8FFFFFF7DFD0B
%FFFD047D52FFFFFFA87D527DA8A852A852A8FFFD047DA87D527DA8FFFFFF
%7D52A8FD067D52FFFFFFA8A85252A8A852A852A8FF527D7D7DA8A87D52A8
%A8FFA87D52A87D7DFD06FFA8A8FD04FF7DFFFF7D7DFFFFFFA87DFFFF7DFF
%FFA8A87DFD05FF7DFFFFFFA8A8FFFFFFA8A8FD0AFFA8A87D52A852A8A87D
%7DFF52FF7DA852A8A8FFA8A87D7DA8A87DFF7DA8FD047D52FFA87DA87D52
%A87DA87D7D7DFF7DFF52A87DA8A8FFFD047DA87D7DFF7DA8FD047D52FF7D
%FD07FFA8FFFFFF7DFFFFFFA8A8FD04FFFD04A8FFFF7D7DFD06FFA8A8FFFF
%FF7DA8FFFF7DFD0BFFFD047D52A8FFFFA87D527DA8A852A852A8FF7D7D52
%7DFF7D527DFFFFFFA87D527D52FD057D52A8FFFFA87D527DA8A827A852A8
%FF527D527DFFA85252A8A8FFA87D7D7D527DFD07FFA8A8FFA8A8FD04FF7D
%FD05FFA87D7DFFA87DFD07FF7DFD05FF7DFFA8FD0DFF7DA8A87D7DA8A8A8
%FFA852FF7D7DA85252A852FD047D52A8FFFD04A87D7DA8A8A8FF7DA8A87D
%7DFD04A8FF52FD047D527DA8527D7D7DA87D7DFFA8A8A87D7DA87DA8A8FD
%07FFFD04A8FD05FF7DA8FD06FF7DA87DFFA8FFFFFFA8FFA87DFD06FF527D
%FD0DFFA87D7D7DA852FFFFFFA87D527DFF525252277D52FF7D277DA8A8FF
%FF7D7DA8527D7DFFFFA87D527DA852A8FFFFA8A82752FF525252277D52FF
%7D5227A8A8FFFF7D7DA8527D7DFD09FF7D7DFD06FF52A8FD05FFA8FFFD04
%A8FFFFFFA87DA87DA8A8FD04FFA87DFD0CFFA8A8527DFFFFFF7DFF7DFFA8
%527DFF527DA8A8FD047D27FD06A8FFFFFF527DA8A8A852A8FFFFFF7DFF7D
%FFA87D52FF527DA8A87D7DA8A827A8FFFD04A8FFFFFF527DA8FD08FFA87D
%FD04FFA8A8A87DA87DFFFFFFA8FF7DA87D7DFFFFFFA8A8527D7DA8A8FFFF
%FFA8A87DFD0DFF7DFD04FF7D27FFFFFF27A87DA852A8A87D7DA85252A8FF
%FFA852FD04FF7DA8FFFFFF7DFD04FF7D27FFFFFF52527DA852A8A87D7DA8
%7D52A8FFFF7D52FD04FF7DFD09FFA87DA8A8FFFFFF7DA8527DA8A8FFFFFF
%7D52FFFFFF7D7DA8FFA8A87D52FFA8FFFFFF7DA8A8FD0DFFA87DA8FFFFFF
%7DA87DFFA8527DFF527DA8A87D7DA87D27FFFFFD04A8FFFFFF52FD04A852
%A8FFFFFF7DA87DFFA87D52FF527DA8A87D7DA8A827A8FFFD04A8FFFFFF52
%A8A8FD09FF7D7DA8FFFFA8A8527DA8A8FFA8A87DFD04FFA8FF7D7D7DA87D
%A87DA8A8A87D7DA8FD0EFFA87D7D7DA87DFFFFFFA87D277DFF52527D277D
%52FF7D277DA8A8FFFF7D7DA8527D7DFFA8A87D527DA852A8FFFFA8A82752
%FF525252277D52FFA85252A8A8FFFF7D7DA8527D7DFD0BFF7DA87DA87D7D
%7DA87DA87DA8FFA8A8FFFFFFA8FFFFFFA852A8A87DA8FFFFFFA8FD0FFF7D
%A87D7D7DA87DA8FFFF52A852A87D52527D527DA87D5252A8FFA8A8A87D7D
%7DA8A8A8FF7DA87D7D7DFD04A8FF7D5252A87D52527D527DA87DA8527DFF
%A8A8FD057DA8FD0BFFA8FFFFA8A87DA8A87DA8FFFFFFA8FD04FF7DFD04FF
%A87D7D7DFFFFFFA8A8FD0EFF7D527DA852A8FFFFA87D277DFFA827A852A8
%FF527D527DFF525252FD04FF7D52A852FD047DA852A8FFFFFF7D5252A8FF
%27A852A8FF527D527DFFA85252A8A8FFA87D7DA8527DFD0AFF7DFD04FFA8
%7D7D7DFD04FFA8A8FFFFFFA8FD04FF7DA87DA8FD04FFA8FD0EFFA8A87D52
%A87DA8A8A87DFF7DA87DA87DA8A8FFA87D7D7DA8A87DFF7DA8FD047D52FF
%A87DA87D52A87DA87D7DA8FF7DA87DA87DA8A8FFFD047DA87D7DFF7DA8FD
%047D52FFA8FD0AFFA8FD04FFA87D7DA8FD04FFA8FD04FFA8FFFFFFA87DA8
%A87DA8A8FFFFA8FD0EFFFD047D52A8A8FFA87D527DA8A8527D7DA8FFFD04
%7DFF7D527DFFA8FFA87D52FD077D52A8A8FFA87D527DA8A8527D7DA8FFFD
%047DFF7D7D7DA8A8FFA87D527D7D7DFD0AFFA8FFFFA87D7DA8A852A8FFFF
%FFA8FFFFFFA8A8FFA87DA87DA87DA87DA87DA87DFD0FFF7DA8A87D7DFFA8
%A8A87D52FF7D52A8527DA852A87D7DA87D7DA8A8A8FFA8527DA87D7DA87D
%A8A87D7DFFA8A8A87D52A8A8527D527DA827A8527DFFA852FD05A852A8A8
%7D7DFD0AFF7D7DA8A8A87DA8A8A87DA8A8FFA8FD04FF527DA8FF7DA85252
%A8A8FFFFA87D7DA8FD0DFFA87D52527D52A8FFFFFF522752FF7D52522752
%52FF7D2752FFFFFFA87D527D527D7DFFFFA87D7D527D52A8A8FFFFA82752
%FF7D5252275252FF7D5227A8FFFFFF7D527D527D7DFD09FFA87D7DFFFFFF
%7DA8277D7DA8FFA87D7DA8FFFF7DA8FFFFFFA8A87D7DA8A8FFFFFFFD04A8
%FD0CFFA87D7DFFFFFFA8FF7DA87D527DFF52FD057DA8A827FD04A8FF7DFF
%A8A8527DA8A8A87D7DFFFFA8A8FF7DA8A87D7DFF52FD057DA8FF277DA8A8
%A8FFA8FFFFA8527DA8FD07FFA8A8A8FD04FFA87D7D7DA8A8FFFFFF7D7DFF
%7DFFA8FFFFFF7D7D7DA8A8A8FD04FF7D7DA8FD0DFF7DFD04FF7D52FFFFFF
%27A87DA852A8A87D7DA85252A8FFFFA852FD04FF7DA8FFFFFF7DFD04FF7D
%52FFFFFF52527DA852A8A87D7DA87D52A8FFFF7D52FD04FF7DA8FD09FF7D
%A8FD04FF7DA87DA87DA8FFFFFFFD04A8FFA8FD06FF7DFD06FF7D7DFD0DFF
%A87DA8FFFFFF7DA8A8FFFF527DA87D7D7DFF7DA8A87D52A8FFFFA87DA8FF
%FFFF52A8FFFFA87DA8FFFFFF7D7DA8FFFF5252A87D7DA8FF7DA8A8A852A8
%FFFF7DA8A8FFFFFF52FD0AFF7D52FD06FF7DA8FD05FFA8FF7D7D7DA8FD05
%FFA87DFD05FF7DA8A8A8FD0BFFA87D527D7DA87DFFFFA87D7D277DFF5252
%7D277D52A87D277DA87DFFFF7D7DA87D7D52A8A87D527D7DA87DA8FFA87D
%A8527DFF52527D277D52A8A85252A87DFFFF7DA8A87D7D52A8A8FD07FF7D
%FF7DFD05FF7DFD07FF52A8FF7D7DFD06FFA8FD04FFA8A8FFFFA8FD0CFFA8
%A8FD047DA8FFFFFF527D52FF7D52527D527DA87D527DFFFFA8A8FD047DA8
%A8FFFFA8A8FD047DA8A8FFFF7D5252FF7D52527D527DA87D7D52A8FFFFFF
%FD057DA8FD08FF7DFFFFFFA8FD04FFA8FD06FF7D7DFFFFA8A87DA8FD04FF
%A8A8FFFFFF7DFFFFFF7DFD0BFFA87D7DA852A8FFFFA8A8527DFFA827A852
%7DA8527D527DFF52527DA8FFFFA87D7DA852FD047DA852A8FFFFA87D5252
%7DA827A852A8A852A8527DFF7D527DA8A8FFA87D7DA8527DFD06FFA8A8FF
%FFFFA8A8FFFFFF7DFD04FFA87DA8A8FFFFA8FFFF7DA8FFFFFF7DA8FFFFA8
%FD04FFA8FD0BFFA8A87D527D7DA8A8A87DA87DFF7D7D7DA8A8FF7DA87D7D
%A8A87DA87DA8A8A87D7D52A87D7DA87D52A87DFD05A87DFF7D7D7DA8A8FF
%FD047DA8A87DA87DA8A8A87D7D52A87DFD07FF7DFFFFFFA8A8FFFF7D7DFF
%FFFFA87DFFFFA8FFA8A8FFFFFF7DA8FFA8A87DA8FFA8A8FFFFA87DFD0BFF
%7DA87D527DA8A8A8FD047DA8A87D7D7DA8FFFD047DA87D7DFD04A87D7D52
%527D7D7DA852527D7DA8A87DA87D7DA8A8527D7DA8A8FD047DA8FD047DA8
%A87D7D52527D7DA8FD06FFA87DFFFFFF7DFF7DA87DFFFFA87DFFFFFF7DFF
%FFA8FD04FFA8FFFF7DA87DA8A8FFFFA8A8FD0CFFA87DA8A87DA8FFA8A8A8
%5252FFA852A87D7DFF52A8527DA87D52A8A8FFFFFF527DA87D7DA87DA8A8
%7DA8FFFFFFA87D52A8A852A87DA8FF52A8527DFFA852A8A8A8FFFF52A8A8
%7D7DFD08FFA87DFFA8FFA87DA8A8A8FF7DFD04FFA8FFA87DFD04FFA8FF7D
%7D52A87D7D527D7DA87DA8FD0BFFA87D7D527D52A8A8FFFF525252A87DFD
%0552FF525252FFFFFF7D7D527D52A87DFFFFA87D7D527D52A8A8FFFF7D27
%52A87DFD0552FF527D27A8FFFFA87D527D52A87DFD07FFA8A8A87D527D52
%A8A87D52A8A8A8FD04FF7DFFFFA8A8FD04FF7D7DA8A8A8FF7D7D7DFFFFFF
%7DA8FD09FFA87D7D7DFD04A8FFA8A87D527DFF527D7D527D52A8A827A8A8
%A8FFFF7DFFA87D527DA8A87D7D7DFD04A8FFA8A8A85252FF527D7D527D7D
%A8FF277DA8A8FFFF7DFFA87D527DA8FD05FFA8A8FFFFFFA87D7DFFA8A8FF
%7DA8FD04FF7DA8FFFFFFA8A87DA87D7D7DFFA87D7D7DFFA8A8FF7DA8FD0A
%FFA8FF52A8FFFFFF7D7DA8FFFF277D7DA852A8A87D7DA85252A8FFA8A852
%FD04FF7DA8FFA8FF52FD04FF7D52A8FFFF52527DA852A8A87D7DA87D527D
%FFA8A87DFD04FF52A8FD07FF7DA8FFA87DFF52A87DA8FF7D527DA8A87DA8
%FD07FF7D7D7DA87DA87D7DA8FF7DFF7DA8FD0DFF7DFD04FF7D7DA8FFFF52
%7DA8A87DA8FF7DA8A87D52FFFFFF7D7DFD04FF7DFD04FF7DFD04FF7D7DA8
%FFFF5252A8A87DA8FF7DA8A8A852A8FFFF7D7DFD04FF7DFD09FFFD04A8FF
%A87DA87D7D7DA87D7DA8FD08FF7DFFA8FFFFA87DA87DFF7D7D7DFFA8A8A8
%FD09FFA8A8527DA8FFA8A8FFA87DA8277DFF52527D527D52A87D527DA87D
%FFFF7DA8FF7D527DA8A87D527DA8FF7DA8FFA87DA8527DFF52527D527D52
%A8A85252A87DFFFFA8A8FF7D527DA8FD06FFA8FFA87D7DA8FFFD047DFFA8
%A8A87DA8FD06FF7DFFFFFF7DA8FFFF7DA87D527DA8A8FF7DA8FD0AFFA8A8
%527D7D7DA8FFFFFF527D52FF527D5252527DFF7D277DFD04FFFD057DA8FF
%FFA8A852A87D52A8FFFFFF7D5252FF527D5252527DFF7D5252A8FFFFFFFD
%057DA8FD06FFA87DA8A8A87D277DA87DFFFFA8A8A8FFA8A8FD05FFA8A8FF
%FFFFA8A87D52FD057DA8FF7DA8FD0AFFA87D7DA852A8A8A87DA85252FFA8
%27A8527DA8527D7D7DA8527D7DA8A8FFA8527DA852FD047DA852A8FFFF7D
%A87D527DA827A8527DA8527D7D52FF7D527DA87DFF7D527DA87DA8A8FD05
%FFA8A8FFA87D7D52FD047DA8A8FFA8FF7DA8FD05FFFD06A8527D7DFFFFFF
%7DA87DFD05A8FD07FFA87DA8527DA8FFFFFF7D7D7DFFA87D7D7DA8FF7DA8
%7D7DA8A852A8A8FFA8FF7D7D7DA87DA8FD047DA8FFFFFF7D7D7DFFA87D7D
%7DA8FF7DA87D7DA8A87DA87DFFFFA87D7D7DA87DFFFFFFA8A8A8FFA8A87D
%7DFFFFA87D527D7DFD05A8FD0BFF7DA87DFFFFFF7D5252FD04A8FF7DFD07
%FF7DFF7D527D7D7DA87DA8A8FD067DA8FFA87D7D527D7DA8A87D7DA87D7D
%5252A8A87DFF52527D7D7DA87DA8A8FD067DA8A87D7DA852A8527DA8FD04
%7DA85252A8A8A8FFFF7DA8FFA8A87D52527DA8FFFF7D7DA8A8FD0DFFA87D
%FFA87DA8A87D7D52A8A8A8FFFF7DA8A8FD06FFA852A8A8A8FD04FFA87D7D
%FFA87DA8527DFF52A87D7DFFA852A8FD04FFA8FD047DA852A8A8A8FD04FF
%A87D7DFFA87DA8527DFF52A87D7DFFA852A8FD04FFA8A87D7D7DFFFFFF7D
%A8FFFFA8A8FD057DA87DA8FFA8A8FD0BFFA87DFFA8FF7D2752A87DA8FFFF
%A87D7D7DA8A87DFD06FFA87DA87DA8FD05FF7D7D7DA8FF277D7D527DFF52
%A852FD06FF7D7DA87DFFA8A87DA87DFD06FF7D7D7DA8FF277D7D277DFF52
%7D52FD05FFA87DA8A87DFFFFA87DA8527D7DA8FFFFA8A8A85227A8A8FFA8
%7D7DFD0AFFFD05A87D7DFFA8A87D7D7DA87DA8FFFFFFA8A8FD05FFA8A8FD
%06FFA8A8A8527DFFFD067DA8FF7D7DA8A8FD06FFA8A8FFFFA8A8FD06FFA8
%A8A8527DFFFD067DA8FF52A8A8A8FD06FFA8A8FFFF7DFFFFFF7D7D7DA852
%A87DFFA87D7DFD04A8FD0EFFFD04A8FFA87D7DA8A852A8A8FFFFFFA8A8FD
%06FF7DFD05FF7DA8A8FF527D7DA87DA8FFA8A8A8527DA8FFA87DA8FD04FF
%A8A8FFFFFF7DFD05FF7DA8A8A87D7D7DA87DFFFD04A87D7D7DFFA8A8FD05
%FFA8A8FF7DA8FD04FF7D7D7DA8527D7DFF7DFF7DFD10FFA87DFFA8A8FF7D
%A87DA8FF7D7DFD05FF7DFD06FFA8A8FFFFFFA8A8FFFFFF7DA8FFA8A8A8FF
%7DA8FFA852FFFFFFA87DFD04FFA8FD04FFA8A8FFFFFFA8A8FFFFFFA87DFF
%A8A8A8FF7DA8FFFF7DFFFFFFA8A8FD04FFA8FFFFA8FD04FFA8A87DFFA8A8
%7D7DFFFFA8FF7DFD0EFFA87DFFFF7DA87D7DFFA8A87D7DFF7DA8FFFFFFA8
%A8FFFFFFA8A87D7DA8FFA8A8FD04FF7DA8FFA8A8A87DFF7DFFA87DFD04FF
%A8A8FFFF7D7DA8A87DA87D7DA8FFA8A8FD04FFA87DFFA8A8A87DFF7DFFA8
%7D7DFFFFFFA8A8FFFF7D7DA8A87DFFFFFFA8A8FF7D7DA87DFF7DA8A8A8FF
%FF7DFD0DFFA8A8FFFFFF7DA87DA8A87D52A8FFFF7DA8A8A87DA8A8FD05FF
%7DA87D7DA8FFFFFF7DFF7DFF7DFFA87DFFA8FFA87DFD05FF7D7DA8A8A8FF
%A8FFFFFF7DA8A87DA8FD04FFA87DFF7DFFA87DFFA8FFA8A8A8FD04FF7D7D
%A87DA8A87D7DA8A87DA8FFFFA87D7DFF7DA87D7DA8FFFFA87DFD0CFFA8A8
%A87D52A8FD057DFFA8FFFFFFA8FFA8A87DFF7DFD04FFA8A8A87DA87DFF7D
%A8FFA87DA8FFFFA8FFA87DA8A8A8FFA8A87DFF7DA87DFD06FFFD05A87DA8
%A8A87DA87DA8FFFFA8FFA87D7DFFFD04A87DA87DFD04A87DA8FFA8FD04FF
%A8A87D52A87DA8A87D7DA87DFD10FF7DFFA8FFA8FFFFA87D7DFD07FFA8A8
%A8FD05FFA8A8FFFFFFA8FD04FFA8FD06FFA8FFFFA8A8FD05FFA8FD08FFA8
%A8FFFFFFA8A8A8FFFFA8FD06FFA8FFFFFFA8A8A8FFFFFFA8FFA8A8A8FD07
%FF7D7DA8FFA8A8FFFFFF7DA8FD10FF7DFD05FF7DFFFFFF52A8FD06FFA852
%A8FD47FF52FD07FFA87DA8FFFFA8A8FFFFFFA8A8FD10FFA8A8FD04FFA8FD
%04FF7DFD07FF52FD47FFA87DFD07FFA8FD04FFA8FD05FFA8FD10FFA87DFD
%04FFA8FD04FFA852FFA87DA8FF7DFF7DFD45FFA87DA8A8FFFF7DA8FF52A8
%FFFFFFA8A8FD04FF7DFD12FFA8A8FFFFFFA8FD05FF7D7DFD05A8FFFF7DFD
%43FFA87DFFFF7DFFA8FF7D7D7DFD05FFA8FFFFFF7DFD14FFA87DFFFF7DFD
%05FFA87D52A87D7DA8FFFFFF7DA8A8A87DFD39FFA8A87DFFA87DA8FFFFA8
%7DA87D7D52A8FD04FFA8A8FFFF7DA8FD15FFFD04A8FD04FF7DA87D7D7DA8
%7DFD05FF527DA8FFA8FD38FFA8A8A8527DA8FD04FFA87D7D52A8A87DFD04
%FFA8FF7DFD19FF7D7DFD05FF7DA87DFF7D7DA8FFA8A87DFFA8A87DA8FD38
%FF7D7D7DFFA8A87DFFFFFF52A8A87DA8A8A8FD04FF7D7DFD1AFFA87DA8FD
%05FF7DA87DA8A87D7DA8A8FD05FF7DFD04A8FD31FFA8A8A87DA8FD05FF7D
%A87DA87D7DA8A8FD05FFA852FD1BFFA8A8A87DFFA8A87DA8A8FD067DA8A8
%FFFFFFA8A8FFFFA8A87DFD2EFFA87DFFA8FF7DFD05FF7DA87DA87DA87DFD
%04A8FFFFFD04A8FD1BFF7DA87D52A8A8FD04FFA87DFF52A8A87DFD04FFA8
%FD04FFA8FD2EFF7DFD04FFA8FD04FF7DFFA87DFF7D7DFFFFFFA8A8A87D7D
%FF7DFD1CFFFD04A87DFD05FFA8A87D7D52A8A8FFFFFFA8A8FD04FFA8A87D
%A8FD28FF7D7D7DA8FD04FF7DFFFFFFA8A87D7D527D7DA8FD05FF7DA8FF7D
%FD22FF7DFD04FFA87DFF7D7D7DFD05FF7DFD04FF7D7DFFA8FD28FFA8FFA8
%7DFFFFFFA8A8FD05FF7D7D7DA8A8A8FD04FF7DA8FD26FF52FFFFFF7DFF7D
%A8A87D52FD05FF7DFFA87D7DFFA8A8FFA8A8FFFFA8A8FD1BFFA8FFFFA87D
%FF7DFFFF7D7DFFA87DA8FD04FF5252A87DFD04A8FFA87DA8FD28FF7DFFA8
%FFFFFF7DFFFFFF7DFD05FF7DA87D7DFFA8FFA87DA8FFA87DFFFFFFA8FD13
%FFA8FFFFFFA8A8A8FFA8A8A8FFA8FF7D7D7DA8FD04FFA87DA8FFFF7DA8FF
%A8A8FFA8A8FD2AFF7DA8FD08FF527DA8A87D7D52FD05A87DA8A8A87DFF7D
%FF7DA87DA8A8FFA8A8FD08FFA8FFFFFF7DA87DA8FFFD04A8FFA8A87DA8A8
%FF7D7D7DA8A8A87D7DFD08FF7D7DA8FD2BFFA852FD09FF7DFF52A8FFA87D
%FFA8A87DFFA8FF7DFFFFA8A8A8FFFFA8A87DA8A8A8FD06FFA8A87DA87DFF
%FFFF7DA8A8FFFFA8A8A8FFA8A8A8FFA87DFF7D7DA87DA8FD08FF7DA8FD2C
%FFA87D7DFD08FFA87D7D7DA8A87DFF7D277DA8A87DA8A8FF7D7DFD04FFA8
%7D7DA87DFD05FFA87DA8A852FD05FF7D7DFFA8A87DA8A87D527DFF52A8A8
%A8527DA8FD08FFA852FD2DFFA8FFFFA8FD05FFA8FFFF7DA8A87D7D7DFF7D
%52FD057DA87D7DFD04FFA8A8FFFFA87D7DFD04A87D7DFFFFFF7DFD05FF7D
%A87DA87D7D7DA8527DA8A87DA87DFF7DFD08FFA8A8FFA8FD2CFFA87DA87D
%7DA87DA8A8A87DFF7D7DFFA8FD057DFF7D527DFFFF7D52A8A8FF7DA8FD04
%FFA8A8FFFFA8FF7DFD05FF7DA8A8FFA87D7DFFA8A8277DFF7D7DA87D7D7D
%FF7DA8A8A87DFD04A87D52A852FD30FFA87DA8FD05FF7DA87DA87DA8A8A8
%7DFFFF7D7DFFA87D7D7DA8A8A8FD07FF7DFD04FFA8FD06FFFD04A87D7D52
%A8FF7D7DFFA87DA8FFFD057DA8FD06FF7DFFA8FD32FFA87DFD06FF7D7D7D
%FFFFA8527DFFA87DA87D7D7DFF7DA8FD06FFA8FFFFA8A8FFFFA87DFFA8FD
%07FF7DA8FFA8527D7D7DA8FF7D52A8FFFFA87DA8A8FD05FF7DFD36FFA87D
%FD05FFA87DA8A8A87D52A8FF7D7D7DA87DA8A8A87DA8FD05FFA8A8A87DA8
%FFFFFD04A87DFD05FFA87DA8FF7DA8A87D7D7DFFA8277D7DFFA87DA8FD05
%FF7DFD38FFA87DFD04FF52FD04A8FD047D5252FF7D7DA8A852A8A87DA8FF
%FFFFA8A8A87D7DA87D7D7DFF7DA8FD04FF7DA8A87DA8A87D7DFF7D527D52
%A87DFD04A87DA8FFFFFF7DFD3AFFA8A8A8FF7D7DFFFFFFA8A8FFA8A852A8
%FFA852FFA87D7DA87DA87D7D7DA87D527DA87D7DA8A852FD047DA87D7DA8
%A87DFFFF7D7DFF7D7DFD04A87DFFFFFF7D7DA8FF7DFD3CFFA8A87DA8A8FF
%A87DFFA8A8FF7DA87DA8FFFD047DFFA8FFFFFFA8FF7D7D52A8A87D7DA87D
%7D527DA8FD05FFA8A8527D7DFFA8A87DA8FFFF7DFF7DFFFFA8A8A87DFD41
%FFFD04A8FFA8FF7DFFA8FFA8FF7D7D7DFD08FFFD04A87D7DA852A8A8FF7D
%FD07FFA8A87DA8FFA8A8FFA8A8FFA8FFFF7DFFA8FD44FFA8A8A8FFFFA87D
%A8FFA8FFFFA87D7DFFA87DA8FD05FF7DFD04A8FFFFA87DFD04A8FD04FFA8
%7DA8A87D7DA8A8FF7DFFA87D7DFFFFFF7DFD4AFFA8A8FFFFA8FFFFFF7DA8
%FFFFFF7DA8FD07FF7DFD04FFA8FD07FFA87DFFFFFFA87DFFFFFFA8FFFFA8
%A8FD4DFFA8FFFFFFA8A8FFFF52A87DFD04FF7DA8FD05FFA8A8FD04FF7DA8
%FD05FFA87DFD04FFA8A87DA8FF7DFD56FFA8A87DFFFFA8FD05FFA8FD05FF
%A8FD06FF7DFD05FF7DFD05FF7DFFFFA8A8A8FD57FFA8FFFFFFA8A8FD04FF
%A87DA8A8A87D7DA87DA87DA8A87D7DA8A8FF7DA8FD04FF7DA8FFFFFFA8A8
%FD5CFFFD06A87D7DFFFF7DFFFFFFA8FFFFFFA87DA8FF527DFD04A87DA8FD
%63FFA8FFA8FFFFFF7DA87DFD09FFA8A87DA8FFFFA8FFA8FD32FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pattern)
0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611.4561 m
-7830.6475 8611.4561 L
-7830.6475 8599.9365 L
-7893 8599.9365 L
-7893 8611.4561 L
n
u
*u
0 R
0 0 0 1 K
0.144 w-7861.8242 8601.6641 m
-7867.1523 8601.6641 -7870.6074 8599.5039 -7872.1201 8600.2246 c
-7873.6318 8600.873 -7873.2002 8604.3281 -7873.4165 8604.3281 c
-7874.4238 8604.3281 -7874.4238 8606.9199 -7871.3994 8605.9121 c
-7870.2485 8605.4805 -7873.2002 8602.6719 -7874.0635 8602.6719 c
-7874.6396 8602.6719 -7875.2158 8604.3281 -7875.7925 8604.3281 c
-7876.2959 8604.3281 -7876.8721 8600.6563 -7877.4482 8600.6563 c
-7877.9521 8600.6563 -7878.5273 8604.3281 -7879.1035 8604.3281 c
-7879.6797 8604.3281 -7880.1836 8602.6719 -7880.7598 8602.6719 c
-7881.6953 8602.6719 -7884.5762 8605.4805 -7883.4238 8605.9121 c
-7880.3994 8606.9199 -7880.4717 8604.3281 -7881.4795 8604.3281 c
-7881.6953 8604.3281 -7882.5596 8600.873 -7884.0723 8600.2246 c
-7885.5845 8599.5039 -7887.6719 8601.6641 -7893 8601.6641 c
S
1 D
-7861.8242 8604.7598 m
-7863.1201 8604.7598 -7867.0078 8607.3525 -7865.7119 8607.3525 c
-7861.8242 8607.3525 -7863.7676 8605.6963 -7868.5918 8605.6963 c
-7870.0322 8605.6963 -7871.5439 8607.3525 -7872.9834 8607.3525 c
-7874.4238 8607.3525 -7875.9355 8603.752 -7877.3765 8603.752 c
-7878.8877 8603.752 -7880.3281 8607.3525 -7881.8398 8607.3525 c
-7883.2803 8607.3525 -7884.7197 8605.6963 -7886.2314 8605.6963 c
-7891.0557 8605.6963 -7893 8607.3525 -7889.1113 8607.3525 c
-7887.8154 8607.3525 -7891.7041 8604.7598 -7893 8604.7598 c
S
0 D
-7861.8242 8605.7686 m
-7863.1201 8605.7686 -7864.4165 8600.0078 -7865.7119 8600.0078 c
-7867.0078 8600.0078 -7868.3037 8603.5371 -7871.5439 8603.5371 c
-7872.5518 8603.5371 -7873.4883 8600.0078 -7874.4961 8600.0078 c
-7875.4316 8600.0078 -7876.4395 8607.9277 -7877.4482 8607.9277 c
-7878.3838 8607.9277 -7879.3916 8600.0078 -7880.3994 8600.0078 c
-7881.3359 8600.0078 -7882.3438 8603.5371 -7883.2803 8603.5371 c
-7886.5195 8603.5371 -7887.8154 8600.0078 -7889.1113 8600.0078 c
-7890.4082 8600.0078 -7891.7041 8605.7686 -7893 8605.7686 c
S
1 D
-7861.8242 8609.7285 m
-7867.1523 8609.7285 -7870.6074 8611.8887 -7872.1201 8611.2402 c
-7873.6318 8610.5918 -7873.2002 8607.0645 -7873.4165 8607.0645 c
-7874.4238 8607.0645 -7874.4238 8604.4727 -7871.3994 8605.5527 c
-7870.2485 8605.9121 -7873.2002 8608.7207 -7874.0635 8608.7207 c
-7874.6396 8608.7207 -7875.2158 8607.0645 -7875.7925 8607.0645 c
-7876.2959 8607.0645 -7876.8721 8610.7363 -7877.4482 8610.7363 c
-7877.9521 8610.7363 -7878.5273 8607.0645 -7879.1035 8607.0645 c
-7879.6797 8607.0645 -7880.1836 8608.7207 -7880.7598 8608.7207 c
-7881.6953 8608.7207 -7884.5762 8605.9121 -7883.4238 8605.5527 c
-7880.3994 8604.4727 -7880.4717 8607.0645 -7881.4795 8607.0645 c
-7881.6953 8607.0645 -7882.5596 8610.5918 -7884.0723 8611.2402 c
-7885.5845 8611.8887 -7887.6719 8609.7285 -7893 8609.7285 c
S
0 D
-7861.8242 8606.7051 m
-7863.1201 8606.7051 -7867.0078 8604.1123 -7865.7119 8604.1123 c
-7861.8242 8604.1123 -7863.7676 8605.6963 -7868.5918 8605.6963 c
-7870.0322 8605.6963 -7871.5439 8604.1123 -7872.9834 8604.1123 c
-7874.4238 8604.1123 -7875.9355 8607.7129 -7877.3765 8607.7129 c
-7878.8877 8607.7129 -7880.3281 8604.1123 -7881.8398 8604.1123 c
-7883.2803 8604.1123 -7884.7197 8605.6963 -7886.2314 8605.6963 c
-7891.0557 8605.6963 -7893 8604.1123 -7889.1113 8604.1123 c
-7887.8154 8604.1123 -7891.7041 8606.7051 -7893 8606.7051 c
S
1 D
-7861.8242 8605.6963 m
-7863.1201 8605.6963 -7864.4165 8611.3848 -7865.7119 8611.3848 c
-7867.0078 8611.3848 -7868.3037 8607.8564 -7871.5439 8607.8564 c
-7872.5518 8607.8564 -7873.4883 8611.3848 -7874.4961 8611.3848 c
-7875.4316 8611.3848 -7876.4395 8603.4648 -7877.4482 8603.4648 c
-7878.3838 8603.4648 -7879.3916 8611.3848 -7880.3994 8611.3848 c
-7881.3359 8611.3848 -7882.3438 8607.8564 -7883.2803 8607.8564 c
-7886.5195 8607.8564 -7887.8154 8611.3848 -7889.1113 8611.3848 c
-7890.4082 8611.3848 -7891.7041 8605.6963 -7893 8605.6963 c
S
*U
U
u
*u
0 D
-7861.8242 8601.6641 m
-7856.4961 8601.6641 -7853.04 8599.5039 -7851.5273 8600.2246 c
-7850.0156 8600.873 -7850.4482 8604.3281 -7850.2314 8604.3281 c
-7849.2236 8604.3281 -7849.1523 8606.9199 -7852.2485 8605.9121 c
-7853.3994 8605.4805 -7850.4482 8602.6719 -7849.5117 8602.6719 c
-7849.0078 8602.6719 -7848.4316 8604.3281 -7847.8555 8604.3281 c
-7847.3516 8604.3281 -7846.7754 8600.6563 -7846.2002 8600.6563 c
-7845.6953 8600.6563 -7845.1201 8604.3281 -7844.5439 8604.3281 c
-7843.9678 8604.3281 -7843.4639 8602.6719 -7842.8877 8602.6719 c
-7841.9521 8602.6719 -7839.0723 8605.4805 -7840.2236 8605.9121 c
-7843.2485 8606.9199 -7843.1758 8604.3281 -7842.1685 8604.3281 c
-7841.9521 8604.3281 -7841.0879 8600.873 -7839.5762 8600.2246 c
-7838.0635 8599.5039 -7835.9756 8601.6641 -7830.6475 8601.6641 c
S
-7861.8242 8604.7598 m
-7860.5273 8604.7598 -7856.6396 8607.3525 -7857.9355 8607.3525 c
-7861.8242 8607.3525 -7859.8799 8605.6963 -7855.0557 8605.6963 c
-7853.6162 8605.6963 -7852.1035 8607.3525 -7850.6641 8607.3525 c
-7849.1523 8607.3525 -7847.7119 8603.752 -7846.2715 8603.752 c
-7844.7598 8603.752 -7843.3203 8607.3525 -7841.8076 8607.3525 c
-7840.3682 8607.3525 -7838.9277 8605.6963 -7837.4165 8605.6963 c
-7832.5918 8605.6963 -7830.6475 8607.3525 -7834.5361 8607.3525 c
-7835.8325 8607.3525 -7831.9434 8604.7598 -7830.6475 8604.7598 c
S
1 D
-7861.8242 8605.7686 m
-7860.5273 8605.7686 -7859.1602 8600.0078 -7857.8643 8600.0078 c
-7856.5674 8600.0078 -7855.2715 8603.5371 -7852.1035 8603.5371 c
-7851.0957 8603.5371 -7850.1602 8600.0078 -7849.1523 8600.0078 c
-7848.1436 8600.0078 -7847.2085 8607.9277 -7846.2002 8607.9277 c
-7845.2637 8607.9277 -7844.2559 8600.0078 -7843.2485 8600.0078 c
-7842.3115 8600.0078 -7841.3037 8603.5371 -7840.3682 8603.5371 c
-7837.1279 8603.5371 -7835.8325 8600.0078 -7834.5361 8600.0078 c
-7833.2402 8600.0078 -7831.9434 8605.7686 -7830.6475 8605.7686 c
S
0 D
-7861.8242 8609.7285 m
-7856.4961 8609.7285 -7853.04 8611.8887 -7851.5273 8611.2402 c
-7850.0156 8610.5918 -7850.4482 8607.0645 -7850.2314 8607.0645 c
-7849.2236 8607.0645 -7849.1523 8604.4727 -7852.2485 8605.5527 c
-7853.3994 8605.9121 -7850.4482 8608.7207 -7849.5117 8608.7207 c
-7849.0078 8608.7207 -7848.4316 8607.0645 -7847.8555 8607.0645 c
-7847.3516 8607.0645 -7846.7754 8610.7363 -7846.2002 8610.7363 c
-7845.6953 8610.7363 -7845.1201 8607.0645 -7844.5439 8607.0645 c
-7843.9678 8607.0645 -7843.4639 8608.7207 -7842.8877 8608.7207 c
-7841.9521 8608.7207 -7839.0723 8605.9121 -7840.2236 8605.5527 c
-7843.2485 8604.4727 -7843.1758 8607.0645 -7842.1685 8607.0645 c
-7841.9521 8607.0645 -7841.0879 8610.5918 -7839.5762 8611.2402 c
-7838.0635 8611.8887 -7835.9756 8609.7285 -7830.6475 8609.7285 c
S
1 D
-7861.8242 8606.7051 m
-7860.5273 8606.7051 -7856.6396 8604.1123 -7857.9355 8604.1123 c
-7861.8242 8604.1123 -7859.8799 8605.6963 -7855.0557 8605.6963 c
-7853.6162 8605.6963 -7852.1035 8604.1123 -7850.6641 8604.1123 c
-7849.1523 8604.1123 -7847.7119 8607.7129 -7846.2715 8607.7129 c
-7844.7598 8607.7129 -7843.3203 8604.1123 -7841.8076 8604.1123 c
-7840.3682 8604.1123 -7838.9277 8605.6963 -7837.4165 8605.6963 c
-7832.5918 8605.6963 -7830.6475 8604.1123 -7834.5361 8604.1123 c
-7835.8325 8604.1123 -7831.9434 8606.7051 -7830.6475 8606.7051 c
S
0 D
-7861.8242 8605.6963 m
-7860.5273 8605.6963 -7859.1602 8611.3848 -7857.8643 8611.3848 c
-7856.5674 8611.3848 -7855.2715 8607.8564 -7852.1035 8607.8564 c
-7851.0957 8607.8564 -7850.1602 8611.3848 -7849.1523 8611.3848 c
-7848.1436 8611.3848 -7847.2085 8603.4648 -7846.2002 8603.4648 c
-7845.2637 8603.4648 -7844.2559 8611.3848 -7843.2485 8611.3848 c
-7842.3115 8611.3848 -7841.3037 8607.8564 -7840.3682 8607.8564 c
-7837.1279 8607.8564 -7835.8325 8611.3848 -7834.5361 8611.3848 c
-7833.2402 8611.3848 -7831.9434 8605.6963 -7830.6475 8605.6963 c
S
*U
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe PatternOnPath Brush Tool/ Pattern Brush 2/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Pattern Brush 2)
(1 / Unnamed Brush Pattern/ / / / / 5 0.027451 0.0313726 0.0352941 /  1) -
( 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Layer 1) Ln
0 A
%_u
%_1 Ap
%_0 R
%_0 0 0 1 K
%_0 J 0 j 2 w 4 M []0 d%_0 XR
%_328.5254 636.1069 m
%_328.5254 597.7021 297.3896 566.5654 258.9839 566.5654 c
%_220.5781 566.5654 189.4419 597.7021 189.4419 636.1069 c
%_189.4419 674.5127 220.5781 705.6489 258.9839 705.6489 c
%_297.3896 705.6489 328.5254 674.5127 328.5254 636.1069 c
%_s
%_U
0 Ap
0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
328.5254 636.1069 m
328.5254 597.7021 297.3896 566.5654 258.9839 566.5654 c
220.5781 566.5654 189.4419 597.7021 189.4419 636.1069 c
189.4419 674.5127 220.5781 705.6489 258.9839 705.6489 c
297.3896 705.6489 328.5254 674.5127 328.5254 636.1069 c
n
u
u
*u
0 Ap
1 D
0 R
0 0 0 1 K
0.288 w313.8594 581.2324 m
321.0684 588.4927 328.1113 592.3076 328.5352 595.7188 C
328.9961 598.9956 322.4463 601.5005 322.6436 601.875 C
323.3438 603.5732 319.0566 605.7617 318.0508 600.3667 C
317.6406 598.1411 325.415 599.7461 326.0977 601.4121 C
326.5859 602.4185 324.0771 604.8442 324.5234 605.7715 C
324.8799 606.5659 332.1504 604.5728 332.5645 605.7031 C
332.9336 606.6924 326.4727 610.3984 326.8164 611.3394 C
327.1699 612.3066 330.627 612.1177 331.0068 613.168 C
331.5859 615.0059 327.373 621.4585 326.0283 619.6108 C
322.8066 615.1162 327.7227 613.6665 328.2217 615.4277 C
328.3086 615.7759 335.3623 615.4189 337.4004 618.1763 C
339.4385 620.9248 336.3027 625.8774 336.5898 636.1069 C
S
309.4814 585.6104 m
311.1973 587.439 311.6592 595.7998 310.168 594.0854 C
305.6592 589.4268 310.7451 589.0522 315.7471 596.0215 C
317.3271 598.061 315.6855 602.1504 316.9619 604.1172 C
318.0166 606.1377 325.6553 605.4102 326.7969 607.9448 C
327.7451 610.6973 322.0078 615.4019 322.5742 617.7388 C
323.0947 620.0269 327.1611 621.6206 327.4521 624.3154 C
328.8369 632.7764 324.9912 636.1133 324.8848 629.625 C
324.7695 627.3535 330.2744 633.606 330.3984 636.1069 C
S
308.0547 587.0371 m
309.4609 588.5977 319.668 582.6533 321.5156 584.7573 C
323.0371 587.0244 319.3447 593.0244 322.2529 598.1338 C
323.2012 599.6646 330.3389 597.8086 331.2139 599.7554 C
332.0996 601.6367 318.5732 609.8955 319.125 611.2617 C
319.585 612.5415 335.0781 608.7583 335.835 610.8604 C
336.5557 612.7158 330.1172 616.6211 330.5752 618.2207 C
332.0449 623.8999 339.0479 625.5176 339.5059 628.2046 C
339.667 631.0015 328.2705 634.0078 328.3809 636.1069 C
S
302.4541 592.6372 m
308.3994 598.707 307.2529 605.6958 309.4912 606.7974 C
311.7803 608.0391 317.6748 604.1738 317.8252 604.4712 C
318.4668 606.0576 323.4023 603.5068 318.666 599.9941 C
317.0039 598.7563 314.9336 605.8032 315.3555 606.9756 C
315.7432 607.7876 319.127 607.1802 319.5576 608.0732 C
319.9219 608.8857 313.6709 612.6367 313.9346 613.4087 C
314.1719 614.0767 321.3262 612.2627 321.6758 613.2168 C
322.0156 614.1455 319.165 615.9917 319.4795 616.8369 C
319.8877 618.1201 326.4893 621.478 326.7266 619.4395 C
327.4736 613.6392 322.5166 615.3569 322.9775 616.9922 C
323.0791 617.377 316.6406 620.7041 315.9199 623.0713 C
315.084 625.4341 320.1621 627.6753 320.4609 636.1069 C
S
306.7305 588.3613 m
308.124 589.8394 316.6582 591.6724 315.1738 589.9702 C
310.2324 584.8101 310.8975 589.229 315.7471 596.0215 C
317.2676 597.9722 321.1885 598.7168 322.6328 600.981 C
323.9102 603.4189 318.5488 608.9351 319.4824 610.9863 C
320.2305 613.2378 328.0928 613.144 328.8008 615.9434 C
329.4131 618.5596 327.1816 621.7246 327.4521 624.3154 C
328.8203 632.5444 331.4902 636.1431 331.335 628.9985 C
331.2227 626.7412 326.4033 634.0791 326.5078 636.1069 C
S
0 D
308.1572 586.9346 m
309.791 588.7358 302.7725 597.918 303.9375 599.2061 C
304.875 600.75 312.127 597.8174 314.8496 602.5859 C
315.7598 604.0581 310.3525 608.7026 310.8965 609.998 C
311.3887 611.0874 326.5908 605.9482 327.373 607.8501 C
328.04 609.6475 313.7607 616.7461 314.2168 617.959 C
314.7236 619.1533 321.7432 618.7598 322.1934 620.3086 C
323.5537 625.6147 316.499 628.644 316.8584 630.4048 C
316.9258 632.147 328.4063 633.6787 328.5254 636.1069 C
S
*U
U
u
*u
313.8594 581.2324 m
306.5996 574.0234 302.7832 566.9795 299.3711 566.5557 C
296.0947 566.0938 293.5913 572.645 293.2158 572.4478 C
291.5122 571.752 289.2236 575.9702 294.7246 577.0396 C
296.9473 577.4556 295.3535 569.6665 293.5542 568.9331 C
292.6729 568.5059 290.2461 571.0137 289.3198 570.5679 C
288.5244 570.2104 290.5176 562.9399 289.3892 562.5273 C
288.3979 562.1572 284.6919 568.6182 283.751 568.2744 C
282.7842 567.9204 282.9727 564.4634 281.9224 564.0835 C
280.0845 563.5044 273.6338 567.7178 275.4795 569.062 C
279.9746 572.2847 281.4243 567.3682 279.6636 566.8691 C
279.3145 566.7817 279.6709 559.7285 276.916 557.6904 C
274.1665 555.6523 269.2129 558.7886 258.9834 558.501 C
S
309.4814 585.6104 m
307.6514 583.8926 299.291 583.4312 301.0049 584.9229 C
305.665 589.4326 306.0381 584.3457 299.0693 579.3433 C
297.0308 577.7646 292.9399 579.4053 290.9736 578.1284 C
288.8442 577.0225 289.6768 569.4341 287.1465 568.2939 C
284.3936 567.3457 279.6904 573.0835 277.3516 572.5166 C
275.0654 571.9961 273.4697 567.9302 270.7759 567.6392 C
262.314 566.2534 258.9775 570.0991 265.4653 570.2061 C
267.7373 570.3218 261.4844 564.8164 258.9834 564.6924 C
S
308.0547 587.0371 m
306.4941 585.6377 312.3428 575.3203 310.2178 573.4873 C
307.9531 571.958 301.9512 575.6797 296.9565 572.8379 C
295.4258 571.8892 297.2832 564.7529 295.3369 563.877 C
293.3237 562.9287 285.2031 576.5215 283.8306 575.9658 C
282.5493 575.5054 286.332 560.0122 284.231 559.2559 C
282.3745 558.5347 278.4697 564.9736 276.8716 564.5156 C
271.1904 563.0454 269.5732 556.043 266.8857 555.5854 C
264.0908 555.4238 261.082 566.8198 258.9834 566.71 C
S
302.4541 592.6372 m
296.3843 586.6919 289.3945 587.8379 288.2935 585.5991 C
287.0518 583.3105 290.918 577.417 290.6201 577.2656 C
289.0313 576.6309 291.4751 571.623 295.0972 576.4253 C
296.332 578.0923 289.2925 580.1465 288.0107 579.6855 C
287.3018 579.3472 287.9102 575.9634 287.0181 575.5332 C
286.2046 575.1685 282.4536 581.4199 281.6831 581.1563 C
281.0137 580.9185 282.8276 573.7651 281.8735 573.415 C
280.9448 573.0752 279.0986 575.9253 278.2539 575.6113 C
276.9702 575.2031 273.6143 568.6016 275.6509 568.3638 C
281.4521 567.6172 279.7334 572.5742 278.0991 572.1133 C
277.7139 572.0112 274.3867 578.4502 272.0205 579.1709 C
269.6572 580.0068 267.415 574.9292 258.9834 574.6299 C
S
306.7305 588.3613 m
305.251 586.9668 303.418 578.4321 305.1201 579.9165 C
310.2813 584.8589 305.8613 584.1924 299.0693 579.3433 C
297.1196 577.8237 296.3735 573.9023 294.1099 572.4575 C
291.5552 571.125 286.1592 576.543 284.105 575.6089 C
281.8525 574.8604 281.9482 566.998 279.147 566.2896 C
276.5322 565.6782 273.3662 567.9087 270.7759 567.6392 C
262.5459 566.2705 258.9473 563.6006 266.0918 563.7559 C
268.3501 563.8687 261.0112 568.688 258.9834 568.583 C
S
1 D
308.1572 586.9346 m
306.3467 585.3003 297.0991 592.2354 295.7998 591.0908 C
294.2603 590.1455 297.1689 582.9023 292.5049 580.2412 C
291.0327 579.3311 286.3892 584.7388 285.0938 584.1953 C
283.9048 583.6543 289.1348 568.4966 287.2422 567.7178 C
285.4429 567.0508 278.3447 581.3301 277.1323 580.874 C
275.937 580.3672 276.3306 573.3472 274.7832 572.8979 C
269.4756 571.5376 266.4473 578.5923 264.6855 578.2324 C
262.9448 578.1646 261.4116 566.6846 258.9834 566.5654 C
S
*U
U
U
u
u
*u
204.1089 581.2314 m
211.3691 574.0229 215.1841 566.98 218.5952 566.5562 C
221.8721 566.0942 224.377 572.6445 224.7515 572.4478 C
226.4497 571.7471 228.6382 576.0342 223.2432 577.0396 C
221.0176 577.4507 222.623 569.6758 224.2886 568.9937 C
225.2949 568.5054 227.7207 571.0137 228.6479 570.5679 C
229.4424 570.2109 227.4492 562.9404 228.5796 562.5269 C
229.5688 562.1572 233.2749 568.6187 234.2158 568.2749 C
235.1831 567.9204 234.9941 564.4639 236.0444 564.084 C
237.8823 563.5044 244.335 567.7178 242.4873 569.062 C
237.9932 572.2847 236.543 567.3682 238.3042 566.8691 C
238.6528 566.7822 238.2959 559.729 241.0527 557.6904 C
243.8013 555.6523 248.7539 558.7886 258.9834 558.501 C
S
208.4868 585.6094 m
210.3154 583.8931 218.6763 583.4312 216.9619 584.9233 C
212.3032 589.4321 211.9287 584.3462 218.8979 579.3438 C
220.9375 577.7642 225.0269 579.4053 226.9937 578.1289 C
229.0142 577.0747 228.2871 569.436 230.8213 568.2939 C
233.5737 567.3462 238.2783 573.083 240.6152 572.5166 C
242.9033 571.9961 244.4971 567.9302 247.1919 567.6392 C
255.6528 566.2534 258.9897 570.0991 252.5015 570.2061 C
250.2305 570.3218 256.4824 564.8164 258.9834 564.6924 C
S
209.9136 587.0361 m
211.4741 585.6304 205.5298 575.4233 207.6338 573.5757 C
209.9014 572.0542 215.9014 575.7466 221.0103 572.8384 C
222.541 571.8896 220.6851 564.7524 222.6318 563.8765 C
224.5137 562.9917 232.7725 576.5176 234.1382 575.9653 C
235.418 575.5059 231.6348 560.0127 233.7368 559.2559 C
235.5923 558.5352 239.4976 564.9741 241.0972 564.5151 C
246.7764 563.0454 248.3945 556.043 251.0811 555.5854 C
253.8779 555.4238 256.8848 566.8198 258.9834 566.71 C
S
215.5137 592.6362 m
221.584 586.6914 228.5723 587.8384 229.6738 585.5991 C
230.9155 583.311 227.0508 577.4165 227.3477 577.2651 C
228.9346 576.624 226.3833 571.6885 222.8706 576.4253 C
221.6328 578.0874 228.6797 580.1572 229.8525 579.7358 C
230.6641 579.3481 230.0566 575.9639 230.9497 575.5327 C
231.7622 575.1689 235.5132 581.4199 236.2852 581.1563 C
236.9531 580.9189 235.1392 573.7651 236.0938 573.415 C
237.022 573.0757 238.8682 575.9258 239.7134 575.6118 C
240.9966 575.2031 244.3545 568.6016 242.3159 568.3643 C
236.5156 567.6172 238.2334 572.5742 239.8687 572.1133 C
240.2534 572.0117 243.5806 578.4502 245.9478 579.1709 C
248.3105 580.0068 250.5518 574.9292 258.9834 574.6299 C
S
211.2378 588.3604 m
212.7158 586.9673 214.5488 578.4326 212.8467 579.917 C
207.6865 584.8584 212.106 584.1934 218.8979 579.3438 C
220.8486 577.8228 221.5933 573.9023 223.8574 572.458 C
226.2959 571.1812 231.8115 576.542 233.8628 575.6089 C
236.1143 574.8608 236.0205 566.9976 238.8198 566.29 C
241.436 565.6777 244.6011 567.9087 247.1919 567.6392 C
255.4209 566.2705 259.0195 563.6011 251.875 563.7559 C
249.6177 563.8687 256.9556 568.688 258.9834 568.583 C
S
0 D
209.811 586.9341 m
211.6123 585.3003 220.7944 592.3184 222.083 591.1533 C
223.627 590.2163 220.6938 582.9634 225.4624 580.2417 C
226.9346 579.3311 231.5791 584.7383 232.8745 584.1948 C
233.9639 583.7017 228.8247 568.5 230.7266 567.7173 C
232.5239 567.0508 239.6226 581.3306 240.8354 580.874 C
242.0298 580.3672 241.6362 573.3477 243.1855 572.8979 C
248.4912 571.5376 251.5205 578.5923 253.2813 578.2324 C
255.0239 578.1646 256.5557 566.6846 258.9834 566.5654 C
S
*U
U
u
*u
204.1089 581.2314 m
196.9004 588.4917 189.856 592.3081 189.4321 595.7192 C
188.9707 598.9961 195.5215 601.4995 195.3242 601.875 C
194.6284 603.5786 198.8467 605.8677 199.9165 600.3662 C
200.332 598.1436 192.543 599.7378 191.8096 601.5366 C
191.3823 602.418 193.8901 604.8447 193.4443 605.771 C
193.0869 606.5664 185.8164 604.5732 185.4038 605.7017 C
185.0337 606.6929 191.4946 610.3989 191.1509 611.3398 C
190.7969 612.3071 187.3398 612.1182 186.96 613.1685 C
186.3809 615.0063 190.5942 621.4575 191.9385 619.6113 C
195.1611 615.1162 190.2446 613.667 189.7456 615.4272 C
189.6582 615.7764 182.605 615.4199 180.5669 618.1753 C
178.5288 620.9243 181.665 625.8779 181.3774 636.1074 C
S
208.4868 585.6094 m
206.7695 587.4395 206.3076 595.7998 207.7993 594.0859 C
212.3096 589.4258 207.2222 589.0527 202.2197 596.0215 C
200.6411 598.0601 202.2817 602.1509 201.0049 604.1172 C
199.8989 606.2466 192.3105 605.4146 191.1704 607.9443 C
190.2222 610.6973 195.96 615.4004 195.3931 617.7393 C
194.8726 620.0259 190.8066 621.6211 190.5156 624.3154 C
189.1299 632.7769 192.9756 636.1133 193.0825 629.6255 C
193.1982 627.3535 187.6929 633.6064 187.5688 636.1074 C
S
209.9136 587.0361 m
208.5142 588.5967 198.1968 582.748 196.3638 584.8735 C
194.8345 587.1382 198.5562 593.1396 195.7144 598.1343 C
194.7656 599.665 187.6294 597.8076 186.7539 599.7539 C
185.8057 601.7676 199.3984 609.8877 198.8423 611.2607 C
198.3818 612.542 182.8887 608.7588 182.1323 610.8599 C
181.4111 612.7163 187.8506 616.6216 187.3921 618.2192 C
185.9219 623.9004 178.9194 625.5176 178.4619 628.2056 C
178.3003 631 189.6963 634.0088 189.5864 636.1074 C
S
215.5137 592.6362 m
209.5688 598.7065 210.7144 605.6963 208.4756 606.7979 C
206.187 608.0396 200.2935 604.1733 200.1421 604.4707 C
199.5073 606.0596 194.5 603.6162 199.3018 599.9937 C
200.9688 598.7588 203.0229 605.7983 202.562 607.0806 C
202.2236 607.7891 198.8398 607.1807 198.4097 608.0728 C
198.0449 608.8862 204.2964 612.6372 204.0327 613.4077 C
203.7949 614.0771 196.6416 612.2632 196.2915 613.2173 C
195.9517 614.146 198.8018 615.9922 198.4883 616.8374 C
198.0796 618.1206 191.478 621.4771 191.2402 619.4399 C
190.4941 613.6387 195.4507 615.3574 194.9897 616.9917 C
194.8877 617.377 201.3267 620.7046 202.0474 623.0703 C
202.8833 625.4336 197.8057 627.6758 197.5063 636.1074 C
S
211.2378 588.3604 m
209.8433 589.8398 201.3091 591.6729 202.793 589.9707 C
207.7354 584.8091 207.0693 589.2295 202.2197 596.0215 C
200.7002 597.9712 196.7788 598.7173 195.334 600.9814 C
194.0015 603.5361 199.4199 608.9321 198.4854 610.9858 C
197.7368 613.2383 189.8745 613.1426 189.166 615.9438 C
188.5547 618.5586 190.7852 621.7251 190.5156 624.3154 C
189.147 632.5449 186.4775 636.1436 186.6323 628.999 C
186.7451 626.7407 191.5645 634.0796 191.4595 636.1074 C
S
1 D
209.811 586.9341 m
208.1768 588.7441 215.1118 597.9922 213.9673 599.291 C
213.022 600.8306 205.7788 597.9219 203.1177 602.5864 C
202.2075 604.0586 207.6152 608.7017 207.0718 609.9971 C
206.5308 611.186 191.373 605.9561 190.5942 607.8486 C
189.9272 609.6484 204.2065 616.7461 203.7505 617.9585 C
203.2437 619.1538 196.2236 618.7603 195.7744 620.3076 C
194.4141 625.6152 201.4688 628.644 201.1089 630.4053 C
201.041 632.146 189.5605 633.6792 189.4419 636.1074 C
S
*U
U
U
u
u
*u
204.1079 690.9819 m
196.8994 683.7217 189.8564 679.9067 189.4326 676.4956 C
188.9707 673.2188 195.521 670.7139 195.3242 670.3394 C
194.6235 668.6411 198.9106 666.4526 199.916 671.8477 C
200.3271 674.0732 192.5522 672.4683 191.8701 670.8022 C
191.3818 669.7959 193.8901 667.3701 193.4443 666.4434 C
193.0874 665.6484 185.8169 667.6416 185.4033 666.5112 C
185.0337 665.522 191.4951 661.8159 191.1514 660.875 C
190.7969 659.9082 187.3403 660.0967 186.9604 659.0464 C
186.3809 657.2085 190.5942 650.7559 191.9385 652.6035 C
195.1611 657.0981 190.2446 658.5479 189.7451 656.7866 C
189.6582 656.4385 182.6055 656.7954 180.5669 654.0381 C
178.5288 651.2896 181.665 646.3369 181.3774 636.1074 C
S
208.4858 686.604 m
206.7695 684.7754 206.3076 676.415 207.7998 678.1289 C
212.3086 682.7876 207.2227 683.1621 202.2202 676.1934 C
200.6406 674.1533 202.2817 670.064 201.0054 668.0977 C
199.9512 666.0767 192.3125 666.8042 191.1704 664.2695 C
190.2227 661.5176 195.9595 656.8125 195.3931 654.4756 C
194.8726 652.1875 190.8066 650.5938 190.5156 647.8989 C
189.1299 639.438 192.9756 636.1016 193.0825 642.5894 C
193.1982 644.8608 187.6934 638.6084 187.5688 636.1074 C
S
209.9126 685.1777 m
208.5068 683.6167 198.2998 689.561 196.4521 687.457 C
194.9307 685.1895 198.623 679.1899 195.7148 674.0806 C
194.7661 672.5498 187.6289 674.4058 186.7529 672.459 C
185.8682 670.5776 199.394 662.3188 198.8418 660.9526 C
198.3823 659.6729 182.8892 663.4561 182.1323 661.354 C
181.4116 659.499 187.8506 655.5938 187.3916 653.9941 C
185.9219 648.3145 178.9194 646.6968 178.4619 644.0098 C
178.3003 641.2129 189.6963 638.2065 189.5864 636.1074 C
S
215.5127 679.5771 m
209.5679 673.5068 210.7148 666.5186 208.4756 665.417 C
206.1875 664.1753 200.293 668.04 200.1416 667.7432 C
199.5005 666.1567 194.5649 668.7075 199.3018 672.2202 C
200.9639 673.458 203.0337 666.4111 202.6123 665.2388 C
202.2246 664.4268 198.8398 665.0342 198.4092 664.1416 C
198.0454 663.3286 204.2964 659.5776 204.0327 658.8057 C
203.7954 658.1377 196.6416 659.9517 196.2915 658.9976 C
195.9521 658.0688 198.8022 656.2227 198.4883 655.3774 C
198.0796 654.0942 191.478 650.7363 191.2407 652.7749 C
190.4937 658.5752 195.4507 656.8574 194.9897 655.2227 C
194.8882 654.8379 201.3267 651.5103 202.0474 649.1431 C
202.8833 646.7803 197.8057 644.5391 197.5063 636.1074 C
S
211.2368 683.853 m
209.8438 682.375 201.3091 680.542 202.7935 682.2441 C
207.7349 687.4043 207.0698 682.9854 202.2202 676.1934 C
200.6992 674.2422 196.7788 673.4976 195.3345 671.2334 C
194.0576 668.7954 199.4185 663.2793 198.4854 661.2285 C
197.7373 658.9766 189.874 659.0703 189.1665 656.271 C
188.5547 653.6548 190.7852 650.4902 190.5156 647.8989 C
189.147 639.6699 186.4775 636.0713 186.6323 643.2158 C
186.7451 645.4736 191.5645 638.1353 191.4595 636.1074 C
S
0 D
209.8105 685.2798 m
208.1768 683.4785 215.1948 674.2964 214.0293 673.0083 C
213.0928 671.4639 205.8398 674.3975 203.1182 669.6289 C
202.2075 668.1563 207.6147 663.5117 207.0713 662.2168 C
206.5781 661.127 191.3765 666.2661 190.5938 664.3643 C
189.9272 662.5669 204.207 655.4683 203.7505 654.2554 C
203.2437 653.061 196.2241 653.4546 195.7744 651.9058 C
194.4141 646.5996 201.4688 643.5703 201.1089 641.8096 C
201.041 640.0674 189.561 638.5356 189.4419 636.1074 C
S
*U
U
u
*u
204.1079 690.9819 m
211.3682 698.1904 215.1846 705.2349 218.5957 705.6587 C
221.8726 706.1201 224.376 699.5693 224.7515 699.7666 C
226.4551 700.4629 228.7441 696.2441 223.2432 695.1748 C
221.02 694.7588 222.6143 702.5479 224.4131 703.2813 C
225.2949 703.7085 227.7212 701.2012 228.6475 701.6465 C
229.4429 702.0039 227.4497 709.2744 228.5781 709.687 C
229.5693 710.0571 233.2754 703.5962 234.2168 703.9399 C
235.1836 704.2939 234.9946 707.751 236.0449 708.1309 C
237.8828 708.71 244.334 704.4966 242.4878 703.1523 C
237.9927 699.9297 236.5435 704.8462 238.3037 705.3457 C
238.6533 705.4326 238.2964 712.4858 241.0518 714.5239 C
243.8008 716.562 248.7544 713.4258 258.9839 713.7134 C
S
208.4858 686.604 m
210.3154 688.3218 218.6768 688.7832 216.9624 687.2915 C
212.3022 682.7817 211.9292 687.8687 218.8984 692.8711 C
220.9365 694.4497 225.0273 692.8091 226.9937 694.0859 C
229.123 695.1919 228.291 702.7803 230.8213 703.9204 C
233.5742 704.8682 238.2773 699.1309 240.6157 699.6978 C
242.9023 700.2178 244.4976 704.2842 247.1919 704.5752 C
255.6533 705.9609 258.9902 702.1152 252.502 702.0083 C
250.23 701.8926 256.4829 707.3975 258.9839 707.522 C
S
209.9126 685.1777 m
211.4736 686.5767 205.625 696.894 207.75 698.7271 C
210.0146 700.2563 216.0161 696.5347 221.0107 699.3765 C
222.5415 700.3252 220.6841 707.4614 222.6309 708.3369 C
224.644 709.2852 232.7642 695.6924 234.1372 696.2485 C
235.4185 696.709 231.6353 712.2021 233.7368 712.9585 C
235.5928 713.6797 239.498 707.2402 241.0957 707.6987 C
246.7773 709.1689 248.394 716.1714 251.082 716.6289 C
253.8765 716.79 256.8853 705.3945 258.9839 705.5044 C
S
215.5127 679.5771 m
221.583 685.5225 228.5728 684.3765 229.6743 686.6152 C
230.916 688.9038 227.0498 694.7974 227.3472 694.9492 C
228.936 695.5835 226.4927 700.5913 222.8701 695.7891 C
221.6353 694.1221 228.6748 692.0679 229.957 692.5288 C
230.6655 692.8672 230.0571 696.251 230.9492 696.6816 C
231.7627 697.0459 235.5137 690.7944 236.2842 691.0576 C
236.9536 691.2959 235.1396 698.4492 236.0938 698.7993 C
237.0225 699.1392 238.8687 696.2891 239.7139 696.6025 C
240.9971 697.0112 244.3535 703.6123 242.3164 703.8506 C
236.5151 704.5967 238.2339 699.6401 239.8682 700.1011 C
240.2539 700.2031 243.5811 693.7642 245.9468 693.0435 C
248.3105 692.2075 250.5522 697.2852 258.9839 697.5845 C
S
211.2368 683.853 m
212.7163 685.2476 214.5493 693.7822 212.8472 692.2979 C
207.6855 687.3555 212.106 688.0215 218.8984 692.8711 C
220.8477 694.3906 221.5938 698.3125 223.8579 699.7568 C
226.4126 701.0894 231.8086 695.6709 233.8623 696.6055 C
236.1147 697.354 236.0195 705.2163 238.8203 705.9248 C
241.4351 706.5361 244.6016 704.3057 247.1919 704.5752 C
255.4214 705.9438 259.02 708.6133 251.8755 708.4585 C
249.6172 708.3457 256.9561 703.5264 258.9839 703.6313 C
S
1 D
209.8105 685.2798 m
211.6206 686.9141 220.8682 679.979 222.1675 681.1235 C
223.707 682.0688 220.7983 689.3125 225.4629 691.9731 C
226.9351 692.8833 231.5781 687.4756 232.8735 688.019 C
234.0625 688.5601 228.8325 703.7178 230.7256 704.4966 C
232.5249 705.1636 239.623 690.8843 240.835 691.3403 C
242.0303 691.8472 241.6367 698.8672 243.1841 699.3164 C
248.4917 700.6768 251.5205 693.6221 253.2817 693.9819 C
255.0229 694.0498 256.5557 705.5298 258.9839 705.6489 C
S
*U
U
U
u
u
*u
313.8584 690.9829 m
306.5986 698.1914 302.7832 705.2349 299.3721 705.6587 C
296.0952 706.1201 293.5903 699.5698 293.2158 699.7671 C
291.5176 700.4678 289.3291 696.1807 294.7241 695.1748 C
296.9502 694.7637 295.3447 702.5386 293.6787 703.2212 C
292.6724 703.709 290.2466 701.2007 289.3198 701.6465 C
288.5249 702.0034 290.5186 709.2744 289.3877 709.688 C
288.3984 710.0571 284.6924 703.5962 283.7515 703.9399 C
282.7847 704.2939 282.9731 707.7505 281.9229 708.1304 C
280.085 708.71 273.6323 704.4971 275.48 703.1523 C
279.9746 699.9297 281.4248 704.8462 279.6631 705.3457 C
279.3149 705.4326 279.6719 712.4858 276.9146 714.5244 C
274.166 716.562 269.2134 713.4258 258.9839 713.7134 C
S
309.4805 686.605 m
307.6523 688.3213 299.291 688.7832 301.0059 687.2915 C
305.6641 682.7822 306.0391 687.8687 299.0693 692.8711 C
297.0298 694.4502 292.9404 692.8091 290.9741 694.0854 C
288.9531 695.1396 289.6807 702.7783 287.146 703.9204 C
284.394 704.8682 279.6895 699.1313 277.3521 699.6978 C
275.064 700.2183 273.4702 704.2842 270.7754 704.5752 C
262.3145 705.9609 258.978 702.1152 265.4658 702.0083 C
267.7373 701.8926 261.4854 707.3975 258.9839 707.522 C
S
308.0537 685.1782 m
306.4932 686.5845 312.4375 696.791 310.334 698.6392 C
308.0664 700.1602 302.0664 696.4678 296.957 699.376 C
295.4268 700.3252 297.2822 707.4619 295.3354 708.3379 C
293.4541 709.2227 285.1953 695.6968 283.8296 696.249 C
282.5498 696.709 286.3325 712.2021 284.2305 712.959 C
282.3755 713.6797 278.4702 707.2402 276.8706 707.6992 C
271.1909 709.1689 269.5732 716.1719 266.8862 716.6289 C
264.0894 716.7905 261.083 705.3945 258.9839 705.5044 C
S
302.4541 679.5781 m
296.3838 685.5229 289.395 684.376 288.2939 686.6152 C
287.0518 688.9033 290.917 694.7979 290.6196 694.9492 C
289.0332 695.5903 291.584 700.5259 295.0967 695.7896 C
296.3345 694.127 289.2876 692.0571 288.1152 692.4785 C
287.3032 692.8667 287.9106 696.251 287.0181 696.6816 C
286.2051 697.0459 282.4541 690.7944 281.6826 691.0581 C
281.0142 691.2959 282.8281 698.4492 281.874 698.7993 C
280.9453 699.1387 279.0991 696.2886 278.2544 696.6025 C
276.9707 697.0112 273.6128 703.6128 275.6514 703.8506 C
281.4521 704.5972 279.7339 699.6401 278.0991 700.1011 C
277.7144 700.2031 274.3872 693.7642 272.0195 693.0435 C
269.6567 692.2075 267.4155 697.2852 258.9839 697.5845 C
S
306.7295 683.854 m
305.252 685.2476 303.418 693.7817 305.1211 692.2974 C
310.2813 687.3564 305.8613 688.0215 299.0693 692.8711 C
297.1187 694.3916 296.374 698.312 294.1104 699.7568 C
291.6719 701.0332 286.1563 695.6729 284.105 696.6055 C
281.8535 697.3535 281.9468 705.2168 279.1475 705.9248 C
276.5313 706.5366 273.3667 704.3057 270.7754 704.5752 C
262.5469 705.9438 258.9478 708.6133 266.0923 708.4585 C
268.3501 708.3457 261.0117 703.5264 258.9839 703.6313 C
S
0 D
308.1563 685.2808 m
306.3555 686.9141 297.1729 679.896 295.8848 681.0615 C
294.3408 681.998 297.2739 689.251 292.5054 691.9731 C
291.0332 692.8833 286.3882 687.4761 285.0933 688.0195 C
284.0034 688.5127 289.1426 703.7144 287.2407 704.4971 C
285.4434 705.1636 278.3452 690.8838 277.1318 691.3403 C
275.9375 691.8472 276.3311 698.8672 274.7822 699.3169 C
269.4766 700.6768 266.4468 693.6221 264.686 693.9819 C
262.9438 694.0498 261.4121 705.5298 258.9839 705.6489 C
S
*U
U
u
*u
313.8584 690.9829 m
321.0674 683.7227 328.1113 679.9063 328.5352 676.4951 C
328.9971 673.2183 322.4453 670.7148 322.6436 670.3398 C
323.3389 668.6357 319.1201 666.3467 318.0508 671.8481 C
317.6348 674.0708 325.4248 672.4766 326.1582 670.6777 C
326.585 669.7959 324.0771 667.3696 324.5234 666.4434 C
324.8799 665.6479 332.1504 667.6411 332.5635 666.5127 C
332.9336 665.5215 326.4727 661.8154 326.8164 660.8745 C
327.1709 659.9072 330.627 660.0962 331.0068 659.0459 C
331.5859 657.208 327.373 650.7568 326.0293 652.603 C
322.8057 657.0981 327.7227 658.5474 328.2217 656.7871 C
328.3086 656.438 335.3623 656.7944 337.4004 654.0391 C
339.4385 651.29 336.3027 646.3364 336.5898 636.1069 C
S
309.4805 686.605 m
311.1982 684.7754 311.6602 676.4146 310.168 678.1289 C
305.6582 682.7886 310.7451 683.1621 315.748 676.1929 C
317.3262 674.1543 315.6855 670.0635 316.9619 668.0972 C
318.0684 665.9678 325.6572 666.7998 326.7969 664.27 C
327.7451 661.5171 322.0068 656.814 322.5742 654.4751 C
323.0947 652.1885 327.1611 650.5933 327.4521 647.8994 C
328.8369 639.4375 324.9912 636.1006 324.8848 642.5889 C
324.7695 644.8608 330.2744 638.6079 330.3984 636.1069 C
S
308.0537 685.1782 m
309.4531 683.6177 319.7705 689.4663 321.6035 687.3408 C
323.1328 685.0762 319.4111 679.0747 322.2529 674.0801 C
323.2012 672.5493 330.3379 674.4067 331.2139 672.46 C
332.1621 670.4473 318.5693 662.3267 319.125 660.9541 C
319.585 659.6729 335.0781 663.4556 335.835 661.3545 C
336.5557 659.498 330.1172 655.5928 330.5752 653.9951 C
332.0459 648.314 339.0479 646.6968 339.5059 644.0088 C
339.667 641.2144 328.2705 638.2056 328.3809 636.1069 C
S
302.4541 679.5781 m
308.3984 673.5078 307.2529 666.5186 309.4922 665.417 C
311.7803 664.1748 317.6738 668.0415 317.8252 667.7437 C
318.46 666.1548 323.4678 668.5986 318.666 672.2207 C
316.998 673.4561 314.9443 666.416 315.4053 665.1338 C
315.7441 664.4253 319.127 665.0337 319.5576 664.1416 C
319.9229 663.3281 313.6709 659.5771 313.9346 658.8066 C
314.1719 658.1372 321.3262 659.9512 321.6758 658.9971 C
322.0156 658.0684 319.165 656.2222 319.4795 655.377 C
319.8877 654.0938 326.4893 650.7373 326.7266 652.7744 C
327.4736 658.5757 322.5166 656.8569 322.9775 655.2227 C
323.0791 654.8374 316.6406 651.5103 315.9199 649.144 C
315.084 646.7808 320.1621 644.5386 320.4609 636.1069 C
S
306.7295 683.854 m
308.124 682.375 316.6582 680.5415 315.1738 682.2437 C
310.2324 687.4053 310.8984 682.9849 315.748 676.1929 C
317.2676 674.2432 321.1885 673.4971 322.6338 671.2329 C
323.9658 668.6787 318.5479 663.2827 319.4824 661.2285 C
320.2305 658.9761 328.0928 659.0718 328.8008 656.2705 C
329.4121 653.6558 327.1816 650.4893 327.4521 647.8994 C
328.8203 639.6694 331.4902 636.0708 331.335 643.2153 C
331.2227 645.4736 326.4033 638.1348 326.5078 636.1069 C
S
1 D
308.1563 685.2808 m
309.791 683.4707 302.8555 674.2227 304 672.9238 C
304.9453 671.3838 312.1885 674.2925 314.8496 669.6284 C
315.7598 668.1563 310.3525 663.5127 310.8955 662.2178 C
311.4365 661.0283 326.5947 666.2583 327.373 664.3657 C
328.04 662.5664 313.7607 655.4683 314.2168 654.2559 C
314.7236 653.0605 321.7432 653.4541 322.1924 651.9067 C
323.5537 646.5991 316.499 643.5703 316.8584 641.8091 C
316.9258 640.0684 328.4063 638.5352 328.5254 636.1069 C
S
*U
U
U
U
(Adobe PatternOnPath Brush Tool) 1 0 35 XP
%040302010000803F0000000000000001000000005061747465726E204272
%7573682032
/Adobe_Brushed_Path () XT
%_u
%_0 D
%_2 w%_216.4326 661.0874 m
%_307.0078 661.0874 l
%_S
%_U
0 Ap
0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
216.4326 661.0874 m
307.0078 661.0874 l
N
u
u
*u
1 D
0 R
0 0 0 1 K
0.288 w261.7197 669.1519 m
253.9795 669.1519 248.9609 673.4722 246.7632 672.0308 C
244.5674 670.7339 245.1943 663.8237 244.8804 663.8237 C
243.417 663.8237 243.417 658.6401 247.8101 660.6558 C
249.4819 661.519 245.1943 667.1362 243.9404 667.1362 C
243.1035 667.1362 242.2666 663.8237 241.4287 663.8237 C
240.6973 663.8237 239.8604 671.1675 239.0234 671.1675 C
238.2915 671.1675 237.4561 663.8237 236.6191 663.8237 C
235.7822 663.8237 235.0503 667.1362 234.2134 667.1362 C
232.854 667.1362 228.6694 661.519 230.3433 660.6558 C
234.7368 658.6401 234.6318 663.8237 233.1675 663.8237 C
232.854 663.8237 231.5986 670.7339 229.4014 672.0308 C
227.2046 673.4722 224.1724 669.1519 216.4326 669.1519 C
S
0 D
261.7197 662.9604 m
259.8369 662.9604 254.1895 657.7749 256.0723 657.7749 C
261.7197 657.7749 258.8965 661.0874 251.8887 661.0874 C
249.7964 661.0874 247.6006 657.7749 245.5093 657.7749 C
243.417 657.7749 241.2212 664.9761 239.1279 664.9761 C
236.9326 664.9761 234.8403 657.7749 232.644 657.7749 C
230.5518 657.7749 228.4609 661.0874 226.2646 661.0874 C
219.2568 661.0874 216.4326 657.7749 222.0815 657.7749 C
223.9639 657.7749 218.3149 662.9604 216.4326 662.9604 C
S
1 D
261.7197 660.9429 m
259.8369 660.9429 257.9541 672.4644 256.0723 672.4644 C
254.1895 672.4644 252.3071 665.4058 247.6006 665.4058 C
246.1362 665.4058 244.7759 672.4644 243.312 672.4644 C
241.9531 672.4644 240.4888 656.6245 239.0234 656.6245 C
237.6646 656.6245 236.2007 672.4644 234.7368 672.4644 C
233.376 672.4644 231.9121 665.4058 230.5518 665.4058 C
225.8462 665.4058 223.9639 672.4644 222.0815 672.4644 C
220.1978 672.4644 218.3149 660.9429 216.4326 660.9429 C
S
0 D
261.7197 653.0229 m
253.9795 653.0229 248.9609 648.7026 246.7632 649.9995 C
244.5674 651.2964 245.1943 658.3511 244.8804 658.3511 C
243.417 658.3511 243.417 663.5347 247.8101 661.3745 C
249.4819 660.6558 245.1943 655.0386 243.9404 655.0386 C
243.1035 655.0386 242.2666 658.3511 241.4287 658.3511 C
240.6973 658.3511 239.8604 651.0073 239.0234 651.0073 C
238.2915 651.0073 237.4561 658.3511 236.6191 658.3511 C
235.7822 658.3511 235.0503 655.0386 234.2134 655.0386 C
232.854 655.0386 228.6694 660.6558 230.3433 661.3745 C
234.7368 663.5347 234.6318 658.3511 233.1675 658.3511 C
232.854 658.3511 231.5986 651.2964 229.4014 649.9995 C
227.2046 648.7026 224.1724 653.0229 216.4326 653.0229 C
S
1 D
261.7197 659.0698 m
259.8369 659.0698 254.1895 664.2554 256.0723 664.2554 C
261.7197 664.2554 258.8965 661.0874 251.8887 661.0874 C
249.7964 661.0874 247.6006 664.2554 245.5093 664.2554 C
243.417 664.2554 241.2212 657.0542 239.1279 657.0542 C
236.9326 657.0542 234.8403 664.2554 232.644 664.2554 C
230.5518 664.2554 228.4609 661.0874 226.2646 661.0874 C
219.2568 661.0874 216.4326 664.2554 222.0815 664.2554 C
223.9639 664.2554 218.3149 659.0698 216.4326 659.0698 C
S
0 D
261.7197 661.0874 m
259.8369 661.0874 257.9541 649.7104 256.0723 649.7104 C
254.1895 649.7104 252.3071 656.7671 247.6006 656.7671 C
246.1362 656.7671 244.7759 649.7104 243.312 649.7104 C
241.9531 649.7104 240.4888 665.5503 239.0234 665.5503 C
237.6646 665.5503 236.2007 649.7104 234.7368 649.7104 C
233.376 649.7104 231.9121 656.7671 230.5518 656.7671 C
225.8462 656.7671 223.9639 649.7104 222.0815 649.7104 C
220.1978 649.7104 218.3149 661.0874 216.4326 661.0874 C
S
*U
U
u
*u
261.7197 669.1519 m
269.4595 669.1519 274.4795 673.4722 276.6772 672.0308 C
278.873 670.7339 278.2446 663.8237 278.5596 663.8237 C
280.0234 663.8237 280.127 658.6401 275.6294 660.6558 C
273.9575 661.519 278.2446 667.1362 279.605 667.1362 C
280.3369 667.1362 281.1738 663.8237 282.0107 663.8237 C
282.7432 663.8237 283.5801 671.1675 284.4155 671.1675 C
285.1489 671.1675 285.9844 663.8237 286.8213 663.8237 C
287.6582 663.8237 288.3901 667.1362 289.2271 667.1362 C
290.5864 667.1362 294.7695 661.519 293.0972 660.6558 C
288.7031 658.6401 288.8086 663.8237 290.272 663.8237 C
290.5864 663.8237 291.8418 670.7339 294.0376 672.0308 C
296.2349 673.4722 299.2676 669.1519 307.0078 669.1519 C
S
1 D
261.7197 662.9604 m
263.6035 662.9604 269.251 657.7749 267.3682 657.7749 C
261.7197 657.7749 264.5439 661.0874 271.5518 661.0874 C
273.6426 661.0874 275.8398 657.7749 277.9312 657.7749 C
280.127 657.7749 282.2197 664.9761 284.312 664.9761 C
286.5078 664.9761 288.5986 657.7749 290.7964 657.7749 C
292.8872 657.7749 294.9795 661.0874 297.1748 661.0874 C
304.1836 661.0874 307.0078 657.7749 301.3594 657.7749 C
299.4756 657.7749 305.125 662.9604 307.0078 662.9604 C
S
0 D
261.7197 660.9429 m
263.6035 660.9429 265.5894 672.4644 267.4717 672.4644 C
269.356 672.4644 271.2383 665.4058 275.8398 665.4058 C
277.3042 665.4058 278.6631 672.4644 280.127 672.4644 C
281.5923 672.4644 282.9507 656.6245 284.4155 656.6245 C
285.7759 656.6245 287.2397 672.4644 288.7031 672.4644 C
290.0645 672.4644 291.5283 665.4058 292.8872 665.4058 C
297.5942 665.4058 299.4756 672.4644 301.3594 672.4644 C
303.2412 672.4644 305.125 660.9429 307.0078 660.9429 C
S
1 D
261.7197 653.0229 m
269.4595 653.0229 274.4795 648.7026 276.6772 649.9995 C
278.873 651.2964 278.2446 658.3511 278.5596 658.3511 C
280.0234 658.3511 280.127 663.5347 275.6294 661.3745 C
273.9575 660.6558 278.2446 655.0386 279.605 655.0386 C
280.3369 655.0386 281.1738 658.3511 282.0107 658.3511 C
282.7432 658.3511 283.5801 651.0073 284.4155 651.0073 C
285.1489 651.0073 285.9844 658.3511 286.8213 658.3511 C
287.6582 658.3511 288.3901 655.0386 289.2271 655.0386 C
290.5864 655.0386 294.7695 660.6558 293.0972 661.3745 C
288.7031 663.5347 288.8086 658.3511 290.272 658.3511 C
290.5864 658.3511 291.8418 651.2964 294.0376 649.9995 C
296.2349 648.7026 299.2676 653.0229 307.0078 653.0229 C
S
0 D
261.7197 659.0698 m
263.6035 659.0698 269.251 664.2554 267.3682 664.2554 C
261.7197 664.2554 264.5439 661.0874 271.5518 661.0874 C
273.6426 661.0874 275.8398 664.2554 277.9312 664.2554 C
280.127 664.2554 282.2197 657.0542 284.312 657.0542 C
286.5078 657.0542 288.5986 664.2554 290.7964 664.2554 C
292.8872 664.2554 294.9795 661.0874 297.1748 661.0874 C
304.1836 661.0874 307.0078 664.2554 301.3594 664.2554 C
299.4756 664.2554 305.125 659.0698 307.0078 659.0698 C
S
1 D
261.7197 661.0874 m
263.6035 661.0874 265.5894 649.7104 267.4717 649.7104 C
269.356 649.7104 271.2383 656.7671 275.8398 656.7671 C
277.3042 656.7671 278.6631 649.7104 280.127 649.7104 C
281.5923 649.7104 282.9507 665.5503 284.4155 665.5503 C
285.7759 665.5503 287.2397 649.7104 288.7031 649.7104 C
290.0645 649.7104 291.5283 656.7671 292.8872 656.7671 C
297.5942 656.7671 299.4756 649.7104 301.3594 649.7104 C
303.2412 649.7104 305.125 661.0874 307.0078 661.0874 C
S
*U
U
U
U
(Adobe PatternOnPath Brush Tool) 1 0 35 XP
%040302010000803F0000000000000001000000005061747465726E204272
%7573682032
/Adobe_Brushed_Path () XT
%_u
%_0 D
%_2 w%_216.4326 648.1646 m
%_307.0078 648.1646 l
%_S
%_U
0 Ap
0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
216.4326 648.1646 m
307.0078 648.1646 l
N
u
u
*u
1 D
0 R
0 0 0 1 K
0.288 w261.7197 656.229 m
253.9795 656.229 248.9609 660.5493 246.7632 659.1079 C
244.5674 657.811 245.1943 650.9009 244.8804 650.9009 C
243.417 650.9009 243.417 645.7173 247.8101 647.7329 C
249.4819 648.5962 245.1943 654.2134 243.9404 654.2134 C
243.1035 654.2134 242.2666 650.9009 241.4287 650.9009 C
240.6973 650.9009 239.8604 658.2446 239.0234 658.2446 C
238.2915 658.2446 237.4561 650.9009 236.6191 650.9009 C
235.7822 650.9009 235.0503 654.2134 234.2134 654.2134 C
232.854 654.2134 228.6694 648.5962 230.3433 647.7329 C
234.7368 645.7173 234.6318 650.9009 233.1675 650.9009 C
232.854 650.9009 231.5986 657.811 229.4014 659.1079 C
227.2046 660.5493 224.1724 656.229 216.4326 656.229 C
S
0 D
261.7197 650.0376 m
259.8369 650.0376 254.1895 644.8521 256.0723 644.8521 C
261.7197 644.8521 258.8965 648.1646 251.8887 648.1646 C
249.7964 648.1646 247.6006 644.8521 245.5093 644.8521 C
243.417 644.8521 241.2212 652.0532 239.1279 652.0532 C
236.9326 652.0532 234.8403 644.8521 232.644 644.8521 C
230.5518 644.8521 228.4609 648.1646 226.2646 648.1646 C
219.2568 648.1646 216.4326 644.8521 222.0815 644.8521 C
223.9639 644.8521 218.3149 650.0376 216.4326 650.0376 C
S
1 D
261.7197 648.02 m
259.8369 648.02 257.9541 659.5415 256.0723 659.5415 C
254.1895 659.5415 252.3071 652.4829 247.6006 652.4829 C
246.1362 652.4829 244.7759 659.5415 243.312 659.5415 C
241.9531 659.5415 240.4888 643.7017 239.0234 643.7017 C
237.6646 643.7017 236.2007 659.5415 234.7368 659.5415 C
233.376 659.5415 231.9121 652.4829 230.5518 652.4829 C
225.8462 652.4829 223.9639 659.5415 222.0815 659.5415 C
220.1978 659.5415 218.3149 648.02 216.4326 648.02 C
S
0 D
261.7197 640.1001 m
253.9795 640.1001 248.9609 635.7798 246.7632 637.0767 C
244.5674 638.3735 245.1943 645.4282 244.8804 645.4282 C
243.417 645.4282 243.417 650.6118 247.8101 648.4517 C
249.4819 647.7329 245.1943 642.1157 243.9404 642.1157 C
243.1035 642.1157 242.2666 645.4282 241.4287 645.4282 C
240.6973 645.4282 239.8604 638.0845 239.0234 638.0845 C
238.2915 638.0845 237.4561 645.4282 236.6191 645.4282 C
235.7822 645.4282 235.0503 642.1157 234.2134 642.1157 C
232.854 642.1157 228.6694 647.7329 230.3433 648.4517 C
234.7368 650.6118 234.6318 645.4282 233.1675 645.4282 C
232.854 645.4282 231.5986 638.3735 229.4014 637.0767 C
227.2046 635.7798 224.1724 640.1001 216.4326 640.1001 C
S
1 D
261.7197 646.147 m
259.8369 646.147 254.1895 651.3325 256.0723 651.3325 C
261.7197 651.3325 258.8965 648.1646 251.8887 648.1646 C
249.7964 648.1646 247.6006 651.3325 245.5093 651.3325 C
243.417 651.3325 241.2212 644.1313 239.1279 644.1313 C
236.9326 644.1313 234.8403 651.3325 232.644 651.3325 C
230.5518 651.3325 228.4609 648.1646 226.2646 648.1646 C
219.2568 648.1646 216.4326 651.3325 222.0815 651.3325 C
223.9639 651.3325 218.3149 646.147 216.4326 646.147 C
S
0 D
261.7197 648.1646 m
259.8369 648.1646 257.9541 636.7876 256.0723 636.7876 C
254.1895 636.7876 252.3071 643.8442 247.6006 643.8442 C
246.1362 643.8442 244.7759 636.7876 243.312 636.7876 C
241.9531 636.7876 240.4888 652.6274 239.0234 652.6274 C
237.6646 652.6274 236.2007 636.7876 234.7368 636.7876 C
233.376 636.7876 231.9121 643.8442 230.5518 643.8442 C
225.8462 643.8442 223.9639 636.7876 222.0815 636.7876 C
220.1978 636.7876 218.3149 648.1646 216.4326 648.1646 C
S
*U
U
u
*u
261.7197 656.229 m
269.4595 656.229 274.4795 660.5493 276.6772 659.1079 C
278.873 657.811 278.2446 650.9009 278.5596 650.9009 C
280.0234 650.9009 280.127 645.7173 275.6294 647.7329 C
273.9575 648.5962 278.2446 654.2134 279.605 654.2134 C
280.3369 654.2134 281.1738 650.9009 282.0107 650.9009 C
282.7432 650.9009 283.5801 658.2446 284.4155 658.2446 C
285.1489 658.2446 285.9844 650.9009 286.8213 650.9009 C
287.6582 650.9009 288.3901 654.2134 289.2271 654.2134 C
290.5864 654.2134 294.7695 648.5962 293.0972 647.7329 C
288.7031 645.7173 288.8086 650.9009 290.272 650.9009 C
290.5864 650.9009 291.8418 657.811 294.0376 659.1079 C
296.2349 660.5493 299.2676 656.229 307.0078 656.229 C
S
1 D
261.7197 650.0376 m
263.6035 650.0376 269.251 644.8521 267.3682 644.8521 C
261.7197 644.8521 264.5439 648.1646 271.5518 648.1646 C
273.6426 648.1646 275.8398 644.8521 277.9312 644.8521 C
280.127 644.8521 282.2197 652.0532 284.312 652.0532 C
286.5078 652.0532 288.5986 644.8521 290.7964 644.8521 C
292.8872 644.8521 294.9795 648.1646 297.1748 648.1646 C
304.1836 648.1646 307.0078 644.8521 301.3594 644.8521 C
299.4756 644.8521 305.125 650.0376 307.0078 650.0376 C
S
0 D
261.7197 648.02 m
263.6035 648.02 265.5894 659.5415 267.4717 659.5415 C
269.356 659.5415 271.2383 652.4829 275.8398 652.4829 C
277.3042 652.4829 278.6631 659.5415 280.127 659.5415 C
281.5923 659.5415 282.9507 643.7017 284.4155 643.7017 C
285.7759 643.7017 287.2397 659.5415 288.7031 659.5415 C
290.0645 659.5415 291.5283 652.4829 292.8872 652.4829 C
297.5942 652.4829 299.4756 659.5415 301.3594 659.5415 C
303.2412 659.5415 305.125 648.02 307.0078 648.02 C
S
1 D
261.7197 640.1001 m
269.4595 640.1001 274.4795 635.7798 276.6772 637.0767 C
278.873 638.3735 278.2446 645.4282 278.5596 645.4282 C
280.0234 645.4282 280.127 650.6118 275.6294 648.4517 C
273.9575 647.7329 278.2446 642.1157 279.605 642.1157 C
280.3369 642.1157 281.1738 645.4282 282.0107 645.4282 C
282.7432 645.4282 283.5801 638.0845 284.4155 638.0845 C
285.1489 638.0845 285.9844 645.4282 286.8213 645.4282 C
287.6582 645.4282 288.3901 642.1157 289.2271 642.1157 C
290.5864 642.1157 294.7695 647.7329 293.0972 648.4517 C
288.7031 650.6118 288.8086 645.4282 290.272 645.4282 C
290.5864 645.4282 291.8418 638.3735 294.0376 637.0767 C
296.2349 635.7798 299.2676 640.1001 307.0078 640.1001 C
S
0 D
261.7197 646.147 m
263.6035 646.147 269.251 651.3325 267.3682 651.3325 C
261.7197 651.3325 264.5439 648.1646 271.5518 648.1646 C
273.6426 648.1646 275.8398 651.3325 277.9312 651.3325 C
280.127 651.3325 282.2197 644.1313 284.312 644.1313 C
286.5078 644.1313 288.5986 651.3325 290.7964 651.3325 C
292.8872 651.3325 294.9795 648.1646 297.1748 648.1646 C
304.1836 648.1646 307.0078 651.3325 301.3594 651.3325 C
299.4756 651.3325 305.125 646.147 307.0078 646.147 C
S
1 D
261.7197 648.1646 m
263.6035 648.1646 265.5894 636.7876 267.4717 636.7876 C
269.356 636.7876 271.2383 643.8442 275.8398 643.8442 C
277.3042 643.8442 278.6631 636.7876 280.127 636.7876 C
281.5923 636.7876 282.9507 652.6274 284.4155 652.6274 C
285.7759 652.6274 287.2397 636.7876 288.7031 636.7876 C
290.0645 636.7876 291.5283 643.8442 292.8872 643.8442 C
297.5942 643.8442 299.4756 636.7876 301.3594 636.7876 C
303.2412 636.7876 305.125 648.1646 307.0078 648.1646 C
S
*U
U
U
U
(Adobe PatternOnPath Brush Tool) 1 0 35 XP
%040302010000803F0000000000000001000000005061747465726E204272
%7573682032
/Adobe_Brushed_Path () XT
%_u
%_0 D
%_2 w%_216.4326 635.2417 m
%_307.0078 635.2417 l
%_S
%_U
0 Ap
0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
216.4326 635.2417 m
307.0078 635.2417 l
N
u
u
*u
1 D
0 R
0 0 0 1 K
0.288 w261.7197 643.3062 m
253.9795 643.3062 248.9609 647.6265 246.7632 646.1851 C
244.5674 644.8882 245.1943 637.978 244.8804 637.978 C
243.417 637.978 243.417 632.7944 247.8101 634.8101 C
249.4819 635.6733 245.1943 641.2905 243.9404 641.2905 C
243.1035 641.2905 242.2666 637.978 241.4287 637.978 C
240.6973 637.978 239.8604 645.3218 239.0234 645.3218 C
238.2915 645.3218 237.4561 637.978 236.6191 637.978 C
235.7822 637.978 235.0503 641.2905 234.2134 641.2905 C
232.854 641.2905 228.6694 635.6733 230.3433 634.8101 C
234.7368 632.7944 234.6318 637.978 233.1675 637.978 C
232.854 637.978 231.5986 644.8882 229.4014 646.1851 C
227.2046 647.6265 224.1724 643.3062 216.4326 643.3062 C
S
0 D
261.7197 637.1147 m
259.8369 637.1147 254.1895 631.9292 256.0723 631.9292 C
261.7197 631.9292 258.8965 635.2417 251.8887 635.2417 C
249.7964 635.2417 247.6006 631.9292 245.5093 631.9292 C
243.417 631.9292 241.2212 639.1304 239.1279 639.1304 C
236.9326 639.1304 234.8403 631.9292 232.644 631.9292 C
230.5518 631.9292 228.4609 635.2417 226.2646 635.2417 C
219.2568 635.2417 216.4326 631.9292 222.0815 631.9292 C
223.9639 631.9292 218.3149 637.1147 216.4326 637.1147 C
S
1 D
261.7197 635.0972 m
259.8369 635.0972 257.9541 646.6187 256.0723 646.6187 C
254.1895 646.6187 252.3071 639.5601 247.6006 639.5601 C
246.1362 639.5601 244.7759 646.6187 243.312 646.6187 C
241.9531 646.6187 240.4888 630.7788 239.0234 630.7788 C
237.6646 630.7788 236.2007 646.6187 234.7368 646.6187 C
233.376 646.6187 231.9121 639.5601 230.5518 639.5601 C
225.8462 639.5601 223.9639 646.6187 222.0815 646.6187 C
220.1978 646.6187 218.3149 635.0972 216.4326 635.0972 C
S
0 D
261.7197 627.1772 m
253.9795 627.1772 248.9609 622.8569 246.7632 624.1538 C
244.5674 625.4507 245.1943 632.5054 244.8804 632.5054 C
243.417 632.5054 243.417 637.689 247.8101 635.5288 C
249.4819 634.8101 245.1943 629.1929 243.9404 629.1929 C
243.1035 629.1929 242.2666 632.5054 241.4287 632.5054 C
240.6973 632.5054 239.8604 625.1616 239.0234 625.1616 C
238.2915 625.1616 237.4561 632.5054 236.6191 632.5054 C
235.7822 632.5054 235.0503 629.1929 234.2134 629.1929 C
232.854 629.1929 228.6694 634.8101 230.3433 635.5288 C
234.7368 637.689 234.6318 632.5054 233.1675 632.5054 C
232.854 632.5054 231.5986 625.4507 229.4014 624.1538 C
227.2046 622.8569 224.1724 627.1772 216.4326 627.1772 C
S
1 D
261.7197 633.2241 m
259.8369 633.2241 254.1895 638.4097 256.0723 638.4097 C
261.7197 638.4097 258.8965 635.2417 251.8887 635.2417 C
249.7964 635.2417 247.6006 638.4097 245.5093 638.4097 C
243.417 638.4097 241.2212 631.2085 239.1279 631.2085 C
236.9326 631.2085 234.8403 638.4097 232.644 638.4097 C
230.5518 638.4097 228.4609 635.2417 226.2646 635.2417 C
219.2568 635.2417 216.4326 638.4097 222.0815 638.4097 C
223.9639 638.4097 218.3149 633.2241 216.4326 633.2241 C
S
0 D
261.7197 635.2417 m
259.8369 635.2417 257.9541 623.8647 256.0723 623.8647 C
254.1895 623.8647 252.3071 630.9214 247.6006 630.9214 C
246.1362 630.9214 244.7759 623.8647 243.312 623.8647 C
241.9531 623.8647 240.4888 639.7046 239.0234 639.7046 C
237.6646 639.7046 236.2007 623.8647 234.7368 623.8647 C
233.376 623.8647 231.9121 630.9214 230.5518 630.9214 C
225.8462 630.9214 223.9639 623.8647 222.0815 623.8647 C
220.1978 623.8647 218.3149 635.2417 216.4326 635.2417 C
S
*U
U
u
*u
261.7197 643.3062 m
269.4595 643.3062 274.4795 647.6265 276.6772 646.1851 C
278.873 644.8882 278.2446 637.978 278.5596 637.978 C
280.0234 637.978 280.127 632.7944 275.6294 634.8101 C
273.9575 635.6733 278.2446 641.2905 279.605 641.2905 C
280.3369 641.2905 281.1738 637.978 282.0107 637.978 C
282.7432 637.978 283.5801 645.3218 284.4155 645.3218 C
285.1489 645.3218 285.9844 637.978 286.8213 637.978 C
287.6582 637.978 288.3901 641.2905 289.2271 641.2905 C
290.5864 641.2905 294.7695 635.6733 293.0972 634.8101 C
288.7031 632.7944 288.8086 637.978 290.272 637.978 C
290.5864 637.978 291.8418 644.8882 294.0376 646.1851 C
296.2349 647.6265 299.2676 643.3062 307.0078 643.3062 C
S
1 D
261.7197 637.1147 m
263.6035 637.1147 269.251 631.9292 267.3682 631.9292 C
261.7197 631.9292 264.5439 635.2417 271.5518 635.2417 C
273.6426 635.2417 275.8398 631.9292 277.9312 631.9292 C
280.127 631.9292 282.2197 639.1304 284.312 639.1304 C
286.5078 639.1304 288.5986 631.9292 290.7964 631.9292 C
292.8872 631.9292 294.9795 635.2417 297.1748 635.2417 C
304.1836 635.2417 307.0078 631.9292 301.3594 631.9292 C
299.4756 631.9292 305.125 637.1147 307.0078 637.1147 C
S
0 D
261.7197 635.0972 m
263.6035 635.0972 265.5894 646.6187 267.4717 646.6187 C
269.356 646.6187 271.2383 639.5601 275.8398 639.5601 C
277.3042 639.5601 278.6631 646.6187 280.127 646.6187 C
281.5923 646.6187 282.9507 630.7788 284.4155 630.7788 C
285.7759 630.7788 287.2397 646.6187 288.7031 646.6187 C
290.0645 646.6187 291.5283 639.5601 292.8872 639.5601 C
297.5942 639.5601 299.4756 646.6187 301.3594 646.6187 C
303.2412 646.6187 305.125 635.0972 307.0078 635.0972 C
S
1 D
261.7197 627.1772 m
269.4595 627.1772 274.4795 622.8569 276.6772 624.1538 C
278.873 625.4507 278.2446 632.5054 278.5596 632.5054 C
280.0234 632.5054 280.127 637.689 275.6294 635.5288 C
273.9575 634.8101 278.2446 629.1929 279.605 629.1929 C
280.3369 629.1929 281.1738 632.5054 282.0107 632.5054 C
282.7432 632.5054 283.5801 625.1616 284.4155 625.1616 C
285.1489 625.1616 285.9844 632.5054 286.8213 632.5054 C
287.6582 632.5054 288.3901 629.1929 289.2271 629.1929 C
290.5864 629.1929 294.7695 634.8101 293.0972 635.5288 C
288.7031 637.689 288.8086 632.5054 290.272 632.5054 C
290.5864 632.5054 291.8418 625.4507 294.0376 624.1538 C
296.2349 622.8569 299.2676 627.1772 307.0078 627.1772 C
S
0 D
261.7197 633.2241 m
263.6035 633.2241 269.251 638.4097 267.3682 638.4097 C
261.7197 638.4097 264.5439 635.2417 271.5518 635.2417 C
273.6426 635.2417 275.8398 638.4097 277.9312 638.4097 C
280.127 638.4097 282.2197 631.2085 284.312 631.2085 C
286.5078 631.2085 288.5986 638.4097 290.7964 638.4097 C
292.8872 638.4097 294.9795 635.2417 297.1748 635.2417 C
304.1836 635.2417 307.0078 638.4097 301.3594 638.4097 C
299.4756 638.4097 305.125 633.2241 307.0078 633.2241 C
S
1 D
261.7197 635.2417 m
263.6035 635.2417 265.5894 623.8647 267.4717 623.8647 C
269.356 623.8647 271.2383 630.9214 275.8398 630.9214 C
277.3042 630.9214 278.6631 623.8647 280.127 623.8647 C
281.5923 623.8647 282.9507 639.7046 284.4155 639.7046 C
285.7759 639.7046 287.2397 623.8647 288.7031 623.8647 C
290.0645 623.8647 291.5283 630.9214 292.8872 630.9214 C
297.5942 630.9214 299.4756 623.8647 301.3594 623.8647 C
303.2412 623.8647 305.125 635.2417 307.0078 635.2417 C
S
*U
U
U
U
(Adobe PatternOnPath Brush Tool) 1 0 35 XP
%040302010000803F0000000000000001000000005061747465726E204272
%7573682032
/Adobe_Brushed_Path () XT
%_u
%_0 D
%_2 w%_216.4326 622.3184 m
%_307.0078 622.3184 l
%_S
%_U
0 Ap
0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
216.4326 622.3184 m
307.0078 622.3184 l
N
u
u
*u
1 D
0 R
0 0 0 1 K
0.288 w261.7197 630.3828 m
253.9795 630.3828 248.9609 634.7031 246.7632 633.2617 C
244.5674 631.9648 245.1943 625.0547 244.8804 625.0547 C
243.417 625.0547 243.417 619.8711 247.8101 621.8867 C
249.4819 622.75 245.1943 628.3672 243.9404 628.3672 C
243.1035 628.3672 242.2666 625.0547 241.4287 625.0547 C
240.6973 625.0547 239.8604 632.3984 239.0234 632.3984 C
238.2915 632.3984 237.4561 625.0547 236.6191 625.0547 C
235.7822 625.0547 235.0503 628.3672 234.2134 628.3672 C
232.854 628.3672 228.6694 622.75 230.3433 621.8867 C
234.7368 619.8711 234.6318 625.0547 233.1675 625.0547 C
232.854 625.0547 231.5986 631.9648 229.4014 633.2617 C
227.2046 634.7031 224.1724 630.3828 216.4326 630.3828 C
S
0 D
261.7197 624.1914 m
259.8369 624.1914 254.1895 619.0059 256.0723 619.0059 C
261.7197 619.0059 258.8965 622.3184 251.8887 622.3184 C
249.7964 622.3184 247.6006 619.0059 245.5093 619.0059 C
243.417 619.0059 241.2212 626.207 239.1279 626.207 C
236.9326 626.207 234.8403 619.0059 232.644 619.0059 C
230.5518 619.0059 228.4609 622.3184 226.2646 622.3184 C
219.2568 622.3184 216.4326 619.0059 222.0815 619.0059 C
223.9639 619.0059 218.3149 624.1914 216.4326 624.1914 C
S
1 D
261.7197 622.1738 m
259.8369 622.1738 257.9541 633.6953 256.0723 633.6953 C
254.1895 633.6953 252.3071 626.6367 247.6006 626.6367 C
246.1362 626.6367 244.7759 633.6953 243.312 633.6953 C
241.9531 633.6953 240.4888 617.8555 239.0234 617.8555 C
237.6646 617.8555 236.2007 633.6953 234.7368 633.6953 C
233.376 633.6953 231.9121 626.6367 230.5518 626.6367 C
225.8462 626.6367 223.9639 633.6953 222.0815 633.6953 C
220.1978 633.6953 218.3149 622.1738 216.4326 622.1738 C
S
0 D
261.7197 614.2539 m
253.9795 614.2539 248.9609 609.9336 246.7632 611.2305 C
244.5674 612.5273 245.1943 619.582 244.8804 619.582 C
243.417 619.582 243.417 624.7656 247.8101 622.6055 C
249.4819 621.8867 245.1943 616.2695 243.9404 616.2695 C
243.1035 616.2695 242.2666 619.582 241.4287 619.582 C
240.6973 619.582 239.8604 612.2383 239.0234 612.2383 C
238.2915 612.2383 237.4561 619.582 236.6191 619.582 C
235.7822 619.582 235.0503 616.2695 234.2134 616.2695 C
232.854 616.2695 228.6694 621.8867 230.3433 622.6055 C
234.7368 624.7656 234.6318 619.582 233.1675 619.582 C
232.854 619.582 231.5986 612.5273 229.4014 611.2305 C
227.2046 609.9336 224.1724 614.2539 216.4326 614.2539 C
S
1 D
261.7197 620.3008 m
259.8369 620.3008 254.1895 625.4863 256.0723 625.4863 C
261.7197 625.4863 258.8965 622.3184 251.8887 622.3184 C
249.7964 622.3184 247.6006 625.4863 245.5093 625.4863 C
243.417 625.4863 241.2212 618.2852 239.1279 618.2852 C
236.9326 618.2852 234.8403 625.4863 232.644 625.4863 C
230.5518 625.4863 228.4609 622.3184 226.2646 622.3184 C
219.2568 622.3184 216.4326 625.4863 222.0815 625.4863 C
223.9639 625.4863 218.3149 620.3008 216.4326 620.3008 C
S
0 D
261.7197 622.3184 m
259.8369 622.3184 257.9541 610.9414 256.0723 610.9414 C
254.1895 610.9414 252.3071 617.998 247.6006 617.998 C
246.1362 617.998 244.7759 610.9414 243.312 610.9414 C
241.9531 610.9414 240.4888 626.7813 239.0234 626.7813 C
237.6646 626.7813 236.2007 610.9414 234.7368 610.9414 C
233.376 610.9414 231.9121 617.998 230.5518 617.998 C
225.8462 617.998 223.9639 610.9414 222.0815 610.9414 C
220.1978 610.9414 218.3149 622.3184 216.4326 622.3184 C
S
*U
U
u
*u
261.7197 630.3828 m
269.4595 630.3828 274.4795 634.7031 276.6772 633.2617 C
278.873 631.9648 278.2446 625.0547 278.5596 625.0547 C
280.0234 625.0547 280.127 619.8711 275.6294 621.8867 C
273.9575 622.75 278.2446 628.3672 279.605 628.3672 C
280.3369 628.3672 281.1738 625.0547 282.0107 625.0547 C
282.7432 625.0547 283.5801 632.3984 284.4155 632.3984 C
285.1489 632.3984 285.9844 625.0547 286.8213 625.0547 C
287.6582 625.0547 288.3901 628.3672 289.2271 628.3672 C
290.5864 628.3672 294.7695 622.75 293.0972 621.8867 C
288.7031 619.8711 288.8086 625.0547 290.272 625.0547 C
290.5864 625.0547 291.8418 631.9648 294.0376 633.2617 C
296.2349 634.7031 299.2676 630.3828 307.0078 630.3828 C
S
1 D
261.7197 624.1914 m
263.6035 624.1914 269.251 619.0059 267.3682 619.0059 C
261.7197 619.0059 264.5439 622.3184 271.5518 622.3184 C
273.6426 622.3184 275.8398 619.0059 277.9312 619.0059 C
280.127 619.0059 282.2197 626.207 284.312 626.207 C
286.5078 626.207 288.5986 619.0059 290.7964 619.0059 C
292.8872 619.0059 294.9795 622.3184 297.1748 622.3184 C
304.1836 622.3184 307.0078 619.0059 301.3594 619.0059 C
299.4756 619.0059 305.125 624.1914 307.0078 624.1914 C
S
0 D
261.7197 622.1738 m
263.6035 622.1738 265.5894 633.6953 267.4717 633.6953 C
269.356 633.6953 271.2383 626.6367 275.8398 626.6367 C
277.3042 626.6367 278.6631 633.6953 280.127 633.6953 C
281.5923 633.6953 282.9507 617.8555 284.4155 617.8555 C
285.7759 617.8555 287.2397 633.6953 288.7031 633.6953 C
290.0645 633.6953 291.5283 626.6367 292.8872 626.6367 C
297.5942 626.6367 299.4756 633.6953 301.3594 633.6953 C
303.2412 633.6953 305.125 622.1738 307.0078 622.1738 C
S
1 D
261.7197 614.2539 m
269.4595 614.2539 274.4795 609.9336 276.6772 611.2305 C
278.873 612.5273 278.2446 619.582 278.5596 619.582 C
280.0234 619.582 280.127 624.7656 275.6294 622.6055 C
273.9575 621.8867 278.2446 616.2695 279.605 616.2695 C
280.3369 616.2695 281.1738 619.582 282.0107 619.582 C
282.7432 619.582 283.5801 612.2383 284.4155 612.2383 C
285.1489 612.2383 285.9844 619.582 286.8213 619.582 C
287.6582 619.582 288.3901 616.2695 289.2271 616.2695 C
290.5864 616.2695 294.7695 621.8867 293.0972 622.6055 C
288.7031 624.7656 288.8086 619.582 290.272 619.582 C
290.5864 619.582 291.8418 612.5273 294.0376 611.2305 C
296.2349 609.9336 299.2676 614.2539 307.0078 614.2539 C
S
0 D
261.7197 620.3008 m
263.6035 620.3008 269.251 625.4863 267.3682 625.4863 C
261.7197 625.4863 264.5439 622.3184 271.5518 622.3184 C
273.6426 622.3184 275.8398 625.4863 277.9312 625.4863 C
280.127 625.4863 282.2197 618.2852 284.312 618.2852 C
286.5078 618.2852 288.5986 625.4863 290.7964 625.4863 C
292.8872 625.4863 294.9795 622.3184 297.1748 622.3184 C
304.1836 622.3184 307.0078 625.4863 301.3594 625.4863 C
299.4756 625.4863 305.125 620.3008 307.0078 620.3008 C
S
1 D
261.7197 622.3184 m
263.6035 622.3184 265.5894 610.9414 267.4717 610.9414 C
269.356 610.9414 271.2383 617.998 275.8398 617.998 C
277.3042 617.998 278.6631 610.9414 280.127 610.9414 C
281.5923 610.9414 282.9507 626.7813 284.4155 626.7813 C
285.7759 626.7813 287.2397 610.9414 288.7031 610.9414 C
290.0645 610.9414 291.5283 617.998 292.8872 617.998 C
297.5942 617.998 299.4756 610.9414 301.3594 610.9414 C
303.2412 610.9414 305.125 622.3184 307.0078 622.3184 C
S
*U
U
U
U
(Adobe PatternOnPath Brush Tool) 1 0 35 XP
%040302010000803F0000000000000001000000005061747465726E204272
%7573682032
/Adobe_Brushed_Path () XT
%_u
%_0 D
%_2 w%_216.4326 609.3955 m
%_307.0078 609.3955 l
%_S
%_U
0 Ap
0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
216.4326 609.3955 m
307.0078 609.3955 l
N
u
u
*u
1 D
0 R
0 0 0 1 K
0.288 w261.7197 617.46 m
253.9795 617.46 248.9609 621.7803 246.7632 620.3389 C
244.5674 619.042 245.1943 612.1318 244.8804 612.1318 C
243.417 612.1318 243.417 606.9482 247.8101 608.9639 C
249.4819 609.8271 245.1943 615.4443 243.9404 615.4443 C
243.1035 615.4443 242.2666 612.1318 241.4287 612.1318 C
240.6973 612.1318 239.8604 619.4756 239.0234 619.4756 C
238.2915 619.4756 237.4561 612.1318 236.6191 612.1318 C
235.7822 612.1318 235.0503 615.4443 234.2134 615.4443 C
232.854 615.4443 228.6694 609.8271 230.3433 608.9639 C
234.7368 606.9482 234.6318 612.1318 233.1675 612.1318 C
232.854 612.1318 231.5986 619.042 229.4014 620.3389 C
227.2046 621.7803 224.1724 617.46 216.4326 617.46 C
S
0 D
261.7197 611.2686 m
259.8369 611.2686 254.1895 606.083 256.0723 606.083 C
261.7197 606.083 258.8965 609.3955 251.8887 609.3955 C
249.7964 609.3955 247.6006 606.083 245.5093 606.083 C
243.417 606.083 241.2212 613.2842 239.1279 613.2842 C
236.9326 613.2842 234.8403 606.083 232.644 606.083 C
230.5518 606.083 228.4609 609.3955 226.2646 609.3955 C
219.2568 609.3955 216.4326 606.083 222.0815 606.083 C
223.9639 606.083 218.3149 611.2686 216.4326 611.2686 C
S
1 D
261.7197 609.251 m
259.8369 609.251 257.9541 620.7725 256.0723 620.7725 C
254.1895 620.7725 252.3071 613.7139 247.6006 613.7139 C
246.1362 613.7139 244.7759 620.7725 243.312 620.7725 C
241.9531 620.7725 240.4888 604.9326 239.0234 604.9326 C
237.6646 604.9326 236.2007 620.7725 234.7368 620.7725 C
233.376 620.7725 231.9121 613.7139 230.5518 613.7139 C
225.8462 613.7139 223.9639 620.7725 222.0815 620.7725 C
220.1978 620.7725 218.3149 609.251 216.4326 609.251 C
S
0 D
261.7197 601.3311 m
253.9795 601.3311 248.9609 597.0107 246.7632 598.3076 C
244.5674 599.6045 245.1943 606.6592 244.8804 606.6592 C
243.417 606.6592 243.417 611.8428 247.8101 609.6826 C
249.4819 608.9639 245.1943 603.3467 243.9404 603.3467 C
243.1035 603.3467 242.2666 606.6592 241.4287 606.6592 C
240.6973 606.6592 239.8604 599.3154 239.0234 599.3154 C
238.2915 599.3154 237.4561 606.6592 236.6191 606.6592 C
235.7822 606.6592 235.0503 603.3467 234.2134 603.3467 C
232.854 603.3467 228.6694 608.9639 230.3433 609.6826 C
234.7368 611.8428 234.6318 606.6592 233.1675 606.6592 C
232.854 606.6592 231.5986 599.6045 229.4014 598.3076 C
227.2046 597.0107 224.1724 601.3311 216.4326 601.3311 C
S
1 D
261.7197 607.3779 m
259.8369 607.3779 254.1895 612.5635 256.0723 612.5635 C
261.7197 612.5635 258.8965 609.3955 251.8887 609.3955 C
249.7964 609.3955 247.6006 612.5635 245.5093 612.5635 C
243.417 612.5635 241.2212 605.3623 239.1279 605.3623 C
236.9326 605.3623 234.8403 612.5635 232.644 612.5635 C
230.5518 612.5635 228.4609 609.3955 226.2646 609.3955 C
219.2568 609.3955 216.4326 612.5635 222.0815 612.5635 C
223.9639 612.5635 218.3149 607.3779 216.4326 607.3779 C
S
0 D
261.7197 609.3955 m
259.8369 609.3955 257.9541 598.0186 256.0723 598.0186 C
254.1895 598.0186 252.3071 605.0752 247.6006 605.0752 C
246.1362 605.0752 244.7759 598.0186 243.312 598.0186 C
241.9531 598.0186 240.4888 613.8584 239.0234 613.8584 C
237.6646 613.8584 236.2007 598.0186 234.7368 598.0186 C
233.376 598.0186 231.9121 605.0752 230.5518 605.0752 C
225.8462 605.0752 223.9639 598.0186 222.0815 598.0186 C
220.1978 598.0186 218.3149 609.3955 216.4326 609.3955 C
S
*U
U
u
*u
261.7197 617.46 m
269.4595 617.46 274.4795 621.7803 276.6772 620.3389 C
278.873 619.042 278.2446 612.1318 278.5596 612.1318 C
280.0234 612.1318 280.127 606.9482 275.6294 608.9639 C
273.9575 609.8271 278.2446 615.4443 279.605 615.4443 C
280.3369 615.4443 281.1738 612.1318 282.0107 612.1318 C
282.7432 612.1318 283.5801 619.4756 284.4155 619.4756 C
285.1489 619.4756 285.9844 612.1318 286.8213 612.1318 C
287.6582 612.1318 288.3901 615.4443 289.2271 615.4443 C
290.5864 615.4443 294.7695 609.8271 293.0972 608.9639 C
288.7031 606.9482 288.8086 612.1318 290.272 612.1318 C
290.5864 612.1318 291.8418 619.042 294.0376 620.3389 C
296.2349 621.7803 299.2676 617.46 307.0078 617.46 C
S
1 D
261.7197 611.2686 m
263.6035 611.2686 269.251 606.083 267.3682 606.083 C
261.7197 606.083 264.5439 609.3955 271.5518 609.3955 C
273.6426 609.3955 275.8398 606.083 277.9312 606.083 C
280.127 606.083 282.2197 613.2842 284.312 613.2842 C
286.5078 613.2842 288.5986 606.083 290.7964 606.083 C
292.8872 606.083 294.9795 609.3955 297.1748 609.3955 C
304.1836 609.3955 307.0078 606.083 301.3594 606.083 C
299.4756 606.083 305.125 611.2686 307.0078 611.2686 C
S
0 D
261.7197 609.251 m
263.6035 609.251 265.5894 620.7725 267.4717 620.7725 C
269.356 620.7725 271.2383 613.7139 275.8398 613.7139 C
277.3042 613.7139 278.6631 620.7725 280.127 620.7725 C
281.5923 620.7725 282.9507 604.9326 284.4155 604.9326 C
285.7759 604.9326 287.2397 620.7725 288.7031 620.7725 C
290.0645 620.7725 291.5283 613.7139 292.8872 613.7139 C
297.5942 613.7139 299.4756 620.7725 301.3594 620.7725 C
303.2412 620.7725 305.125 609.251 307.0078 609.251 C
S
1 D
261.7197 601.3311 m
269.4595 601.3311 274.4795 597.0107 276.6772 598.3076 C
278.873 599.6045 278.2446 606.6592 278.5596 606.6592 C
280.0234 606.6592 280.127 611.8428 275.6294 609.6826 C
273.9575 608.9639 278.2446 603.3467 279.605 603.3467 C
280.3369 603.3467 281.1738 606.6592 282.0107 606.6592 C
282.7432 606.6592 283.5801 599.3154 284.4155 599.3154 C
285.1489 599.3154 285.9844 606.6592 286.8213 606.6592 C
287.6582 606.6592 288.3901 603.3467 289.2271 603.3467 C
290.5864 603.3467 294.7695 608.9639 293.0972 609.6826 C
288.7031 611.8428 288.8086 606.6592 290.272 606.6592 C
290.5864 606.6592 291.8418 599.6045 294.0376 598.3076 C
296.2349 597.0107 299.2676 601.3311 307.0078 601.3311 C
S
0 D
261.7197 607.3779 m
263.6035 607.3779 269.251 612.5635 267.3682 612.5635 C
261.7197 612.5635 264.5439 609.3955 271.5518 609.3955 C
273.6426 609.3955 275.8398 612.5635 277.9312 612.5635 C
280.127 612.5635 282.2197 605.3623 284.312 605.3623 C
286.5078 605.3623 288.5986 612.5635 290.7964 612.5635 C
292.8872 612.5635 294.9795 609.3955 297.1748 609.3955 C
304.1836 609.3955 307.0078 612.5635 301.3594 612.5635 C
299.4756 612.5635 305.125 607.3779 307.0078 607.3779 C
S
1 D
261.7197 609.3955 m
263.6035 609.3955 265.5894 598.0186 267.4717 598.0186 C
269.356 598.0186 271.2383 605.0752 275.8398 605.0752 C
277.3042 605.0752 278.6631 598.0186 280.127 598.0186 C
281.5923 598.0186 282.9507 613.8584 284.4155 613.8584 C
285.7759 613.8584 287.2397 598.0186 288.7031 598.0186 C
290.0645 598.0186 291.5283 605.0752 292.8872 605.0752 C
297.5942 605.0752 299.4756 598.0186 301.3594 598.0186 C
303.2412 598.0186 305.125 609.3955 307.0078 609.3955 C
S
*U
U
U
U
(Adobe PatternOnPath Brush Tool) 1 0 35 XP
%040302010000803F0000000000000001000000005061747465726E204272
%7573682032
/Adobe_Brushed_Path () XT
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
